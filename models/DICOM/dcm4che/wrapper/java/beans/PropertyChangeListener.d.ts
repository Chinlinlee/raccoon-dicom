import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { PropertyChangeEvent as java_beans_PropertyChangeEvent } from "./PropertyChangeEvent";
/**
 * This class just defines types, you should import {@link PropertyChangeListener} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PropertyChangeListenerClass extends JavaClass {
    /**
     * @param var0 original type: 'java.beans.PropertyChangeEvent'
     * @return original return type: 'void'
     */
    propertyChange(var0: java_beans_PropertyChangeEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.beans.PropertyChangeEvent'
     * @return original return type: 'void'
     */
    propertyChangeSync(var0: java_beans_PropertyChangeEvent | null): void;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createPropertyChangeListenerProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface PropertyChangeListenerInterface {
    /**
     * @param var0 original type: 'java.beans.PropertyChangeEvent'
     * @return original return type: 'void'
     */
    propertyChange(var0: java_beans_PropertyChangeEvent | null): void;
}
/**
 * Create a proxy for the {@link PropertyChangeListener} interface.
 * All required methods in {@link PropertyChangeListenerInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createPropertyChangeListenerProxy(methods: PropertyChangeListenerInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<PropertyChangeListenerInterface>;
declare const PropertyChangeListener_base: typeof PropertyChangeListenerClass;
/**
 * Class java.beans.PropertyChangeListener.
 *
 * This actually imports the java class for further use.
 * The class {@link PropertyChangeListenerClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PropertyChangeListener extends PropertyChangeListener_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default PropertyChangeListener;
//# sourceMappingURL=PropertyChangeListener.d.ts.map