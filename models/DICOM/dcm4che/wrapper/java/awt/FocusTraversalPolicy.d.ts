import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Component as java_awt_Component } from "./Component";
import { Window as java_awt_Window } from "./Window";
import { Container as java_awt_Container } from "./Container";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link FocusTraversalPolicy} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FocusTraversalPolicyClass extends JavaClass {
    /**
     * @param var0 original type: 'java.awt.Window'
     * @return original return type: 'java.awt.Component'
     */
    getInitialComponent(var0: java_awt_Window | null): Promise<java_awt_Component | null>;
    /**
     * @param var0 original type: 'java.awt.Window'
     * @return original return type: 'java.awt.Component'
     */
    getInitialComponentSync(var0: java_awt_Window | null): java_awt_Component | null;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @return original return type: 'java.awt.Component'
     */
    getDefaultComponent(var0: java_awt_Container | null): Promise<java_awt_Component | null>;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @return original return type: 'java.awt.Component'
     */
    getDefaultComponentSync(var0: java_awt_Container | null): java_awt_Component | null;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @param var1 original type: 'java.awt.Component'
     * @return original return type: 'java.awt.Component'
     */
    getComponentAfter(var0: java_awt_Container | null, var1: java_awt_Component | null): Promise<java_awt_Component | null>;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @param var1 original type: 'java.awt.Component'
     * @return original return type: 'java.awt.Component'
     */
    getComponentAfterSync(var0: java_awt_Container | null, var1: java_awt_Component | null): java_awt_Component | null;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @param var1 original type: 'java.awt.Component'
     * @return original return type: 'java.awt.Component'
     */
    getComponentBefore(var0: java_awt_Container | null, var1: java_awt_Component | null): Promise<java_awt_Component | null>;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @param var1 original type: 'java.awt.Component'
     * @return original return type: 'java.awt.Component'
     */
    getComponentBeforeSync(var0: java_awt_Container | null, var1: java_awt_Component | null): java_awt_Component | null;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @return original return type: 'java.awt.Component'
     */
    getFirstComponent(var0: java_awt_Container | null): Promise<java_awt_Component | null>;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @return original return type: 'java.awt.Component'
     */
    getFirstComponentSync(var0: java_awt_Container | null): java_awt_Component | null;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @return original return type: 'java.awt.Component'
     */
    getLastComponent(var0: java_awt_Container | null): Promise<java_awt_Component | null>;
    /**
     * @param var0 original type: 'java.awt.Container'
     * @return original return type: 'java.awt.Component'
     */
    getLastComponentSync(var0: java_awt_Container | null): java_awt_Component | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const FocusTraversalPolicy_base: typeof FocusTraversalPolicyClass;
/**
 * Class java.awt.FocusTraversalPolicy.
 *
 * This actually imports the java class for further use.
 * The class {@link FocusTraversalPolicyClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FocusTraversalPolicy extends FocusTraversalPolicy_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default FocusTraversalPolicy;
//# sourceMappingURL=FocusTraversalPolicy.d.ts.map