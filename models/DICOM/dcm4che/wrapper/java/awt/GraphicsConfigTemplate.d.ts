import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { GraphicsConfiguration as java_awt_GraphicsConfiguration } from "./GraphicsConfiguration";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link GraphicsConfigTemplate} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class GraphicsConfigTemplateClass extends JavaClass {
    /**
     * Original type: 'int'
     */
    static readonly REQUIRED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly PREFERRED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UNNECESSARY: java_lang_Integer | number;
    /**
     * @param var0 original type: 'java.awt.GraphicsConfiguration[]'
     * @return original return type: 'java.awt.GraphicsConfiguration'
     */
    getBestConfiguration(var0: (java_awt_GraphicsConfiguration | null)[] | null): Promise<java_awt_GraphicsConfiguration | null>;
    /**
     * @param var0 original type: 'java.awt.GraphicsConfiguration[]'
     * @return original return type: 'java.awt.GraphicsConfiguration'
     */
    getBestConfigurationSync(var0: (java_awt_GraphicsConfiguration | null)[] | null): java_awt_GraphicsConfiguration | null;
    /**
     * @param var0 original type: 'java.awt.GraphicsConfiguration'
     * @return original return type: 'boolean'
     */
    isGraphicsConfigSupported(var0: java_awt_GraphicsConfiguration | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.awt.GraphicsConfiguration'
     * @return original return type: 'boolean'
     */
    isGraphicsConfigSupportedSync(var0: java_awt_GraphicsConfiguration | null): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const GraphicsConfigTemplate_base: typeof GraphicsConfigTemplateClass;
/**
 * Class java.awt.GraphicsConfigTemplate.
 *
 * This actually imports the java class for further use.
 * The class {@link GraphicsConfigTemplateClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class GraphicsConfigTemplate extends GraphicsConfigTemplate_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default GraphicsConfigTemplate;
//# sourceMappingURL=GraphicsConfigTemplate.d.ts.map