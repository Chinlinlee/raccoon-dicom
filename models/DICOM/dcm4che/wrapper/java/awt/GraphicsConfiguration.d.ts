import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Rectangle as java_awt_Rectangle } from "./Rectangle";
import { ColorModel as java_awt_image_ColorModel } from "./image/ColorModel";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { BufferedImage as java_awt_image_BufferedImage } from "./image/BufferedImage";
import { VolatileImage as java_awt_image_VolatileImage } from "./image/VolatileImage";
import { ImageCapabilities as java_awt_ImageCapabilities } from "./ImageCapabilities";
import { GraphicsDevice as java_awt_GraphicsDevice } from "./GraphicsDevice";
import { AffineTransform as java_awt_geom_AffineTransform } from "./geom/AffineTransform";
import { BufferCapabilities as java_awt_BufferCapabilities } from "./BufferCapabilities";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link GraphicsConfiguration} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class GraphicsConfigurationClass extends JavaClass {
    /**
     * @return original return type: 'java.awt.Rectangle'
     */
    getBounds(): Promise<java_awt_Rectangle | null>;
    /**
     * @return original return type: 'java.awt.Rectangle'
     */
    getBoundsSync(): java_awt_Rectangle | null;
    /**
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModel(): Promise<java_awt_image_ColorModel | null>;
    /**
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModelSync(): java_awt_image_ColorModel | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModel(var0: java_lang_Integer | number): Promise<java_awt_image_ColorModel | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModelSync(var0: java_lang_Integer | number): java_awt_image_ColorModel | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.awt.image.BufferedImage'
     */
    createCompatibleImage(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<java_awt_image_BufferedImage | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.awt.image.BufferedImage'
     */
    createCompatibleImageSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): java_awt_image_BufferedImage | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.BufferedImage'
     */
    createCompatibleImage(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<java_awt_image_BufferedImage | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.BufferedImage'
     */
    createCompatibleImageSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): java_awt_image_BufferedImage | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImage(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<java_awt_image_VolatileImage | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImageSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): java_awt_image_VolatileImage | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.ImageCapabilities'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImage(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_awt_ImageCapabilities | null): Promise<java_awt_image_VolatileImage | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.ImageCapabilities'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImageSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_awt_ImageCapabilities | null): java_awt_image_VolatileImage | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.ImageCapabilities'
     * @param var3 original type: 'int'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImage(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_awt_ImageCapabilities | null, var3: java_lang_Integer | number): Promise<java_awt_image_VolatileImage | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.ImageCapabilities'
     * @param var3 original type: 'int'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImageSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_awt_ImageCapabilities | null, var3: java_lang_Integer | number): java_awt_image_VolatileImage | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImage(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<java_awt_image_VolatileImage | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.awt.image.VolatileImage'
     */
    createCompatibleVolatileImageSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): java_awt_image_VolatileImage | null;
    /**
     * @return original return type: 'java.awt.ImageCapabilities'
     */
    getImageCapabilities(): Promise<java_awt_ImageCapabilities | null>;
    /**
     * @return original return type: 'java.awt.ImageCapabilities'
     */
    getImageCapabilitiesSync(): java_awt_ImageCapabilities | null;
    /**
     * @return original return type: 'java.awt.GraphicsDevice'
     */
    getDevice(): Promise<java_awt_GraphicsDevice | null>;
    /**
     * @return original return type: 'java.awt.GraphicsDevice'
     */
    getDeviceSync(): java_awt_GraphicsDevice | null;
    /**
     * @return original return type: 'java.awt.geom.AffineTransform'
     */
    getDefaultTransform(): Promise<java_awt_geom_AffineTransform | null>;
    /**
     * @return original return type: 'java.awt.geom.AffineTransform'
     */
    getDefaultTransformSync(): java_awt_geom_AffineTransform | null;
    /**
     * @return original return type: 'java.awt.geom.AffineTransform'
     */
    getNormalizingTransform(): Promise<java_awt_geom_AffineTransform | null>;
    /**
     * @return original return type: 'java.awt.geom.AffineTransform'
     */
    getNormalizingTransformSync(): java_awt_geom_AffineTransform | null;
    /**
     * @return original return type: 'java.awt.BufferCapabilities'
     */
    getBufferCapabilities(): Promise<java_awt_BufferCapabilities | null>;
    /**
     * @return original return type: 'java.awt.BufferCapabilities'
     */
    getBufferCapabilitiesSync(): java_awt_BufferCapabilities | null;
    /**
     * @return original return type: 'boolean'
     */
    isTranslucencyCapable(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isTranslucencyCapableSync(): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const GraphicsConfiguration_base: typeof GraphicsConfigurationClass;
/**
 * Class java.awt.GraphicsConfiguration.
 *
 * This actually imports the java class for further use.
 * The class {@link GraphicsConfigurationClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class GraphicsConfiguration extends GraphicsConfiguration_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default GraphicsConfiguration;
//# sourceMappingURL=GraphicsConfiguration.d.ts.map