/// <reference types="node" />
import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { ColorModel as java_awt_image_ColorModel } from "./image/ColorModel";
import { Image as java_awt_Image } from "./Image";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { ImageProducer as java_awt_image_ImageProducer, ImageProducerInterface as java_awt_image_ImageProducerInterface } from "./image/ImageProducer";
import { URL as java_net_URL } from "./../net/URL";
import { FontMetrics as java_awt_FontMetrics } from "./FontMetrics";
import { Font as java_awt_Font } from "./Font";
import { Boolean as java_lang_Boolean } from "./../lang/Boolean";
import { Insets as java_awt_Insets } from "./Insets";
import { GraphicsConfiguration as java_awt_GraphicsConfiguration } from "./GraphicsConfiguration";
import { PrintJob as java_awt_PrintJob } from "./PrintJob";
import { Frame as java_awt_Frame } from "./Frame";
import { JobAttributes as java_awt_JobAttributes } from "./JobAttributes";
import { PageAttributes as java_awt_PageAttributes } from "./PageAttributes";
import { Properties as java_util_Properties } from "./../util/Properties";
import { Clipboard as java_awt_datatransfer_Clipboard } from "./datatransfer/Clipboard";
import { Cursor as java_awt_Cursor } from "./Cursor";
import { Point as java_awt_Point } from "./Point";
import { Dimension as java_awt_Dimension } from "./Dimension";
import { PropertyChangeListener as java_beans_PropertyChangeListener, PropertyChangeListenerInterface as java_beans_PropertyChangeListenerInterface } from "./../beans/PropertyChangeListener";
import { ImageObserver as java_awt_image_ImageObserver, ImageObserverInterface as java_awt_image_ImageObserverInterface } from "./image/ImageObserver";
import { EventQueue as java_awt_EventQueue } from "./EventQueue";
import { DragGestureRecognizer as java_awt_dnd_DragGestureRecognizer } from "./dnd/DragGestureRecognizer";
import { Class as java_lang_Class } from "./../lang/Class";
import { DragSource as java_awt_dnd_DragSource } from "./dnd/DragSource";
import { Component as java_awt_Component } from "./Component";
import { DragGestureListener as java_awt_dnd_DragGestureListener, DragGestureListenerInterface as java_awt_dnd_DragGestureListenerInterface } from "./dnd/DragGestureListener";
import { Dialog$ModalityType as java_awt_Dialog$ModalityType } from "./Dialog$ModalityType";
import { Dialog$ModalExclusionType as java_awt_Dialog$ModalExclusionType } from "./Dialog$ModalExclusionType";
import { AWTEventListener as java_awt_event_AWTEventListener, AWTEventListenerInterface as java_awt_event_AWTEventListenerInterface } from "./event/AWTEventListener";
import { Long as java_lang_Long } from "./../lang/Long";
import { Map as java_util_Map } from "./../util/Map";
import { InputMethodHighlight as java_awt_im_InputMethodHighlight } from "./im/InputMethodHighlight";
/**
 * This class just defines types, you should import {@link Toolkit} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ToolkitClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static getProperty(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static getPropertySync(var0: string | null, var1: string | null): string | null;
    /**
     * @return original return type: 'void'
     */
    sync(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    syncSync(): void;
    /**
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModel(): Promise<java_awt_image_ColorModel | null>;
    /**
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModelSync(): java_awt_image_ColorModel | null;
    /**
     * @return original return type: 'java.awt.Toolkit'
     */
    static getDefaultToolkit(): Promise<Toolkit | null>;
    /**
     * @return original return type: 'java.awt.Toolkit'
     */
    static getDefaultToolkitSync(): Toolkit | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.awt.Image'
     */
    createImage(var0: Buffer | null): Promise<java_awt_Image | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.awt.Image'
     */
    createImageSync(var0: Buffer | null): java_awt_Image | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Image'
     */
    createImage(var0: string | null): Promise<java_awt_Image | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Image'
     */
    createImageSync(var0: string | null): java_awt_Image | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.awt.Image'
     */
    createImage(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<java_awt_Image | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.awt.Image'
     */
    createImageSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): java_awt_Image | null;
    /**
     * @param var0 original type: 'java.awt.image.ImageProducer'
     * @return original return type: 'java.awt.Image'
     */
    createImage(var0: java_awt_image_ImageProducer | JavaInterfaceProxy<java_awt_image_ImageProducerInterface> | null): Promise<java_awt_Image | null>;
    /**
     * @param var0 original type: 'java.awt.image.ImageProducer'
     * @return original return type: 'java.awt.Image'
     */
    createImageSync(var0: java_awt_image_ImageProducer | JavaInterfaceProxy<java_awt_image_ImageProducerInterface> | null): java_awt_Image | null;
    /**
     * @param var0 original type: 'java.net.URL'
     * @return original return type: 'java.awt.Image'
     */
    createImage(var0: java_net_URL | null): Promise<java_awt_Image | null>;
    /**
     * @param var0 original type: 'java.net.URL'
     * @return original return type: 'java.awt.Image'
     */
    createImageSync(var0: java_net_URL | null): java_awt_Image | null;
    /**
     * @param var0 original type: 'java.awt.Font'
     * @return original return type: 'java.awt.FontMetrics'
     */
    getFontMetrics(var0: java_awt_Font | null): Promise<java_awt_FontMetrics | null>;
    /**
     * @param var0 original type: 'java.awt.Font'
     * @return original return type: 'java.awt.FontMetrics'
     */
    getFontMetricsSync(var0: java_awt_Font | null): java_awt_FontMetrics | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setDynamicLayout(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setDynamicLayoutSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'boolean'
     */
    isDynamicLayoutActive(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isDynamicLayoutActiveSync(): boolean;
    /**
     * @param var0 original type: 'java.awt.GraphicsConfiguration'
     * @return original return type: 'java.awt.Insets'
     */
    getScreenInsets(var0: java_awt_GraphicsConfiguration | null): Promise<java_awt_Insets | null>;
    /**
     * @param var0 original type: 'java.awt.GraphicsConfiguration'
     * @return original return type: 'java.awt.Insets'
     */
    getScreenInsetsSync(var0: java_awt_GraphicsConfiguration | null): java_awt_Insets | null;
    /**
     * @param var0 original type: 'java.awt.Frame'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.awt.JobAttributes'
     * @param var3 original type: 'java.awt.PageAttributes'
     * @return original return type: 'java.awt.PrintJob'
     */
    getPrintJob(var0: java_awt_Frame | null, var1: string | null, var2: java_awt_JobAttributes | null, var3: java_awt_PageAttributes | null): Promise<java_awt_PrintJob | null>;
    /**
     * @param var0 original type: 'java.awt.Frame'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.awt.JobAttributes'
     * @param var3 original type: 'java.awt.PageAttributes'
     * @return original return type: 'java.awt.PrintJob'
     */
    getPrintJobSync(var0: java_awt_Frame | null, var1: string | null, var2: java_awt_JobAttributes | null, var3: java_awt_PageAttributes | null): java_awt_PrintJob | null;
    /**
     * @param var0 original type: 'java.awt.Frame'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Properties'
     * @return original return type: 'java.awt.PrintJob'
     */
    getPrintJob(var0: java_awt_Frame | null, var1: string | null, var2: java_util_Properties | null): Promise<java_awt_PrintJob | null>;
    /**
     * @param var0 original type: 'java.awt.Frame'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Properties'
     * @return original return type: 'java.awt.PrintJob'
     */
    getPrintJobSync(var0: java_awt_Frame | null, var1: string | null, var2: java_util_Properties | null): java_awt_PrintJob | null;
    /**
     * @return original return type: 'java.awt.datatransfer.Clipboard'
     */
    getSystemSelection(): Promise<java_awt_datatransfer_Clipboard | null>;
    /**
     * @return original return type: 'java.awt.datatransfer.Clipboard'
     */
    getSystemSelectionSync(): java_awt_datatransfer_Clipboard | null;
    /**
     * @param var0 original type: 'java.awt.Image'
     * @param var1 original type: 'java.awt.Point'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Cursor'
     */
    createCustomCursor(var0: java_awt_Image | null, var1: java_awt_Point | null, var2: string | null): Promise<java_awt_Cursor | null>;
    /**
     * @param var0 original type: 'java.awt.Image'
     * @param var1 original type: 'java.awt.Point'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Cursor'
     */
    createCustomCursorSync(var0: java_awt_Image | null, var1: java_awt_Point | null, var2: string | null): java_awt_Cursor | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.Dimension'
     */
    getBestCursorSize(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<java_awt_Dimension | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.Dimension'
     */
    getBestCursorSizeSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): java_awt_Dimension | null;
    /**
     * @return original return type: 'int'
     */
    getMaximumCursorColors(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getMaximumCursorColorsSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    isFrameStateSupported(var0: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    isFrameStateSupportedSync(var0: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getDesktopProperty(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getDesktopPropertySync(var0: string | null): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.beans.PropertyChangeListener'
     * @return original return type: 'void'
     */
    addPropertyChangeListener(var0: string | null, var1: java_beans_PropertyChangeListener | JavaInterfaceProxy<java_beans_PropertyChangeListenerInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.beans.PropertyChangeListener'
     * @return original return type: 'void'
     */
    addPropertyChangeListenerSync(var0: string | null, var1: java_beans_PropertyChangeListener | JavaInterfaceProxy<java_beans_PropertyChangeListenerInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.beans.PropertyChangeListener'
     * @return original return type: 'void'
     */
    removePropertyChangeListener(var0: string | null, var1: java_beans_PropertyChangeListener | JavaInterfaceProxy<java_beans_PropertyChangeListenerInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.beans.PropertyChangeListener'
     * @return original return type: 'void'
     */
    removePropertyChangeListenerSync(var0: string | null, var1: java_beans_PropertyChangeListener | JavaInterfaceProxy<java_beans_PropertyChangeListenerInterface> | null): void;
    /**
     * @return original return type: 'java.beans.PropertyChangeListener[]'
     */
    getPropertyChangeListeners(): Promise<(java_beans_PropertyChangeListener | null)[] | null>;
    /**
     * @return original return type: 'java.beans.PropertyChangeListener[]'
     */
    getPropertyChangeListenersSync(): (java_beans_PropertyChangeListener | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.beans.PropertyChangeListener[]'
     */
    getPropertyChangeListeners(var0: string | null): Promise<(java_beans_PropertyChangeListener | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.beans.PropertyChangeListener[]'
     */
    getPropertyChangeListenersSync(var0: string | null): (java_beans_PropertyChangeListener | null)[] | null;
    /**
     * @return original return type: 'boolean'
     */
    areExtraMouseButtonsEnabled(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    areExtraMouseButtonsEnabledSync(): boolean;
    /**
     * @return original return type: 'java.awt.Dimension'
     */
    getScreenSize(): Promise<java_awt_Dimension | null>;
    /**
     * @return original return type: 'java.awt.Dimension'
     */
    getScreenSizeSync(): java_awt_Dimension | null;
    /**
     * @return original return type: 'int'
     */
    getScreenResolution(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getScreenResolutionSync(): number;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getFontList(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getFontListSync(): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.net.URL'
     * @return original return type: 'java.awt.Image'
     */
    getImage(var0: java_net_URL | null): Promise<java_awt_Image | null>;
    /**
     * @param var0 original type: 'java.net.URL'
     * @return original return type: 'java.awt.Image'
     */
    getImageSync(var0: java_net_URL | null): java_awt_Image | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Image'
     */
    getImage(var0: string | null): Promise<java_awt_Image | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Image'
     */
    getImageSync(var0: string | null): java_awt_Image | null;
    /**
     * @param var0 original type: 'java.awt.Image'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.awt.image.ImageObserver'
     * @return original return type: 'boolean'
     */
    prepareImage(var0: java_awt_Image | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_awt_image_ImageObserver | JavaInterfaceProxy<java_awt_image_ImageObserverInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.awt.Image'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.awt.image.ImageObserver'
     * @return original return type: 'boolean'
     */
    prepareImageSync(var0: java_awt_Image | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_awt_image_ImageObserver | JavaInterfaceProxy<java_awt_image_ImageObserverInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.awt.Image'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.awt.image.ImageObserver'
     * @return original return type: 'int'
     */
    checkImage(var0: java_awt_Image | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_awt_image_ImageObserver | JavaInterfaceProxy<java_awt_image_ImageObserverInterface> | null): Promise<number>;
    /**
     * @param var0 original type: 'java.awt.Image'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.awt.image.ImageObserver'
     * @return original return type: 'int'
     */
    checkImageSync(var0: java_awt_Image | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_awt_image_ImageObserver | JavaInterfaceProxy<java_awt_image_ImageObserverInterface> | null): number;
    /**
     * @return original return type: 'void'
     */
    beep(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    beepSync(): void;
    /**
     * @return original return type: 'java.awt.datatransfer.Clipboard'
     */
    getSystemClipboard(): Promise<java_awt_datatransfer_Clipboard | null>;
    /**
     * @return original return type: 'java.awt.datatransfer.Clipboard'
     */
    getSystemClipboardSync(): java_awt_datatransfer_Clipboard | null;
    /**
     * @return original return type: 'int'
     */
    getMenuShortcutKeyMask(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getMenuShortcutKeyMaskSync(): number;
    /**
     * @return original return type: 'int'
     */
    getMenuShortcutKeyMaskEx(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getMenuShortcutKeyMaskExSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    getLockingKeyState(var0: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    getLockingKeyStateSync(var0: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    setLockingKeyState(var0: java_lang_Integer | number, var1: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    setLockingKeyStateSync(var0: java_lang_Integer | number, var1: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'java.awt.EventQueue'
     */
    getSystemEventQueue(): Promise<java_awt_EventQueue | null>;
    /**
     * @return original return type: 'java.awt.EventQueue'
     */
    getSystemEventQueueSync(): java_awt_EventQueue | null;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.awt.dnd.DragSource'
     * @param var2 original type: 'java.awt.Component'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.awt.dnd.DragGestureListener'
     * @return original return type: 'java.awt.dnd.DragGestureRecognizer'
     */
    createDragGestureRecognizer(var0: java_lang_Class | null, var1: java_awt_dnd_DragSource | null, var2: java_awt_Component | null, var3: java_lang_Integer | number, var4: java_awt_dnd_DragGestureListener | JavaInterfaceProxy<java_awt_dnd_DragGestureListenerInterface> | null): Promise<java_awt_dnd_DragGestureRecognizer | null>;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.awt.dnd.DragSource'
     * @param var2 original type: 'java.awt.Component'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.awt.dnd.DragGestureListener'
     * @return original return type: 'java.awt.dnd.DragGestureRecognizer'
     */
    createDragGestureRecognizerSync(var0: java_lang_Class | null, var1: java_awt_dnd_DragSource | null, var2: java_awt_Component | null, var3: java_lang_Integer | number, var4: java_awt_dnd_DragGestureListener | JavaInterfaceProxy<java_awt_dnd_DragGestureListenerInterface> | null): java_awt_dnd_DragGestureRecognizer | null;
    /**
     * @return original return type: 'boolean'
     */
    isAlwaysOnTopSupported(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isAlwaysOnTopSupportedSync(): boolean;
    /**
     * @param var0 original type: 'java.awt.Dialog$ModalityType'
     * @return original return type: 'boolean'
     */
    isModalityTypeSupported(var0: java_awt_Dialog$ModalityType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.awt.Dialog$ModalityType'
     * @return original return type: 'boolean'
     */
    isModalityTypeSupportedSync(var0: java_awt_Dialog$ModalityType | null): boolean;
    /**
     * @param var0 original type: 'java.awt.Dialog$ModalExclusionType'
     * @return original return type: 'boolean'
     */
    isModalExclusionTypeSupported(var0: java_awt_Dialog$ModalExclusionType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.awt.Dialog$ModalExclusionType'
     * @return original return type: 'boolean'
     */
    isModalExclusionTypeSupportedSync(var0: java_awt_Dialog$ModalExclusionType | null): boolean;
    /**
     * @param var0 original type: 'java.awt.event.AWTEventListener'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    addAWTEventListener(var0: java_awt_event_AWTEventListener | JavaInterfaceProxy<java_awt_event_AWTEventListenerInterface> | null, var1: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.event.AWTEventListener'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    addAWTEventListenerSync(var0: java_awt_event_AWTEventListener | JavaInterfaceProxy<java_awt_event_AWTEventListenerInterface> | null, var1: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.awt.event.AWTEventListener'
     * @return original return type: 'void'
     */
    removeAWTEventListener(var0: java_awt_event_AWTEventListener | JavaInterfaceProxy<java_awt_event_AWTEventListenerInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.event.AWTEventListener'
     * @return original return type: 'void'
     */
    removeAWTEventListenerSync(var0: java_awt_event_AWTEventListener | JavaInterfaceProxy<java_awt_event_AWTEventListenerInterface> | null): void;
    /**
     * @return original return type: 'java.awt.event.AWTEventListener[]'
     */
    getAWTEventListeners(): Promise<(java_awt_event_AWTEventListener | null)[] | null>;
    /**
     * @return original return type: 'java.awt.event.AWTEventListener[]'
     */
    getAWTEventListenersSync(): (java_awt_event_AWTEventListener | null)[] | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.awt.event.AWTEventListener[]'
     */
    getAWTEventListeners(var0: java_lang_Long | bigint | number): Promise<(java_awt_event_AWTEventListener | null)[] | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.awt.event.AWTEventListener[]'
     */
    getAWTEventListenersSync(var0: java_lang_Long | bigint | number): (java_awt_event_AWTEventListener | null)[] | null;
    /**
     * @param var0 original type: 'java.awt.im.InputMethodHighlight'
     * @return original return type: 'java.util.Map'
     */
    mapInputMethodHighlight(var0: java_awt_im_InputMethodHighlight | null): Promise<java_util_Map | null>;
    /**
     * @param var0 original type: 'java.awt.im.InputMethodHighlight'
     * @return original return type: 'java.util.Map'
     */
    mapInputMethodHighlightSync(var0: java_awt_im_InputMethodHighlight | null): java_util_Map | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const Toolkit_base: typeof ToolkitClass;
/**
 * Class java.awt.Toolkit.
 *
 * This actually imports the java class for further use.
 * The class {@link ToolkitClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Toolkit extends Toolkit_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default Toolkit;
//# sourceMappingURL=Toolkit.d.ts.map