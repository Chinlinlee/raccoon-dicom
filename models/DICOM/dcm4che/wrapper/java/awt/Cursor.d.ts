import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link Cursor} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CursorClass extends JavaClass {
    /**
     * Original type: 'int'
     */
    static readonly DEFAULT_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CROSSHAIR_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly TEXT_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly WAIT_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly SW_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly SE_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NW_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NE_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly N_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly S_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly W_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly E_RESIZE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly HAND_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly MOVE_CURSOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CUSTOM_CURSOR: java_lang_Integer | number;
    /**
     * @return original return type: 'java.lang.String'
     */
    getName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    getType(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getTypeSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.awt.Cursor'
     */
    static getPredefinedCursor(var0: java_lang_Integer | number): Promise<Cursor | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.awt.Cursor'
     */
    static getPredefinedCursorSync(var0: java_lang_Integer | number): Cursor | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Cursor'
     */
    static getSystemCustomCursor(var0: string | null): Promise<Cursor | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.awt.Cursor'
     */
    static getSystemCustomCursorSync(var0: string | null): Cursor | null;
    /**
     * @return original return type: 'java.awt.Cursor'
     */
    static getDefaultCursor(): Promise<Cursor | null>;
    /**
     * @return original return type: 'java.awt.Cursor'
     */
    static getDefaultCursorSync(): Cursor | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.awt.Cursor'
     */
    static newInstance(var0: java_lang_Integer | number): Promise<Cursor>;
    /**
     * @param var0 original type: 'int'
     */
    constructor(var0: java_lang_Integer | number);
}
declare const Cursor_base: typeof CursorClass;
/**
 * Class java.awt.Cursor.
 *
 * This actually imports the java class for further use.
 * The class {@link CursorClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Cursor extends Cursor_base {
}
export default Cursor;
//# sourceMappingURL=Cursor.d.ts.map