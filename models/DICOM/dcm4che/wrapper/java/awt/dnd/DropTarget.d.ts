import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { DropTargetDropEvent as java_awt_dnd_DropTargetDropEvent } from "./DropTargetDropEvent";
import { Component as java_awt_Component } from "./../Component";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { DropTargetListener as java_awt_dnd_DropTargetListener, DropTargetListenerInterface as java_awt_dnd_DropTargetListenerInterface } from "./DropTargetListener";
import { Boolean as java_lang_Boolean } from "./../../lang/Boolean";
import { DropTargetContext as java_awt_dnd_DropTargetContext } from "./DropTargetContext";
import { DropTargetDragEvent as java_awt_dnd_DropTargetDragEvent } from "./DropTargetDragEvent";
import { DropTargetEvent as java_awt_dnd_DropTargetEvent } from "./DropTargetEvent";
import { FlavorMap as java_awt_datatransfer_FlavorMap, FlavorMapInterface as java_awt_datatransfer_FlavorMapInterface } from "./../datatransfer/FlavorMap";
import { Long as java_lang_Long } from "./../../lang/Long";
import { Class as java_lang_Class } from "./../../lang/Class";
/**
 * This class just defines types, you should import {@link DropTarget} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DropTargetClass extends JavaClass {
    /**
     * @return original return type: 'boolean'
     */
    isActive(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isActiveSync(): boolean;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDropEvent'
     * @return original return type: 'void'
     */
    drop(var0: java_awt_dnd_DropTargetDropEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDropEvent'
     * @return original return type: 'void'
     */
    dropSync(var0: java_awt_dnd_DropTargetDropEvent | null): void;
    /**
     * @return original return type: 'void'
     */
    addNotify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    addNotifySync(): void;
    /**
     * @return original return type: 'void'
     */
    removeNotify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    removeNotifySync(): void;
    /**
     * @return original return type: 'java.awt.Component'
     */
    getComponent(): Promise<java_awt_Component | null>;
    /**
     * @return original return type: 'java.awt.Component'
     */
    getComponentSync(): java_awt_Component | null;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @return original return type: 'void'
     */
    setComponent(var0: java_awt_Component | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @return original return type: 'void'
     */
    setComponentSync(var0: java_awt_Component | null): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setDefaultActions(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setDefaultActionsSync(var0: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetListener'
     * @return original return type: 'void'
     */
    addDropTargetListener(var0: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetListener'
     * @return original return type: 'void'
     */
    addDropTargetListenerSync(var0: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null): void;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setActive(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setActiveSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'java.awt.dnd.DropTargetContext'
     */
    getDropTargetContext(): Promise<java_awt_dnd_DropTargetContext | null>;
    /**
     * @return original return type: 'java.awt.dnd.DropTargetContext'
     */
    getDropTargetContextSync(): java_awt_dnd_DropTargetContext | null;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDragEvent'
     * @return original return type: 'void'
     */
    dragEnter(var0: java_awt_dnd_DropTargetDragEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDragEvent'
     * @return original return type: 'void'
     */
    dragEnterSync(var0: java_awt_dnd_DropTargetDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDragEvent'
     * @return original return type: 'void'
     */
    dragOver(var0: java_awt_dnd_DropTargetDragEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDragEvent'
     * @return original return type: 'void'
     */
    dragOverSync(var0: java_awt_dnd_DropTargetDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDragEvent'
     * @return original return type: 'void'
     */
    dropActionChanged(var0: java_awt_dnd_DropTargetDragEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetDragEvent'
     * @return original return type: 'void'
     */
    dropActionChangedSync(var0: java_awt_dnd_DropTargetDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetEvent'
     * @return original return type: 'void'
     */
    dragExit(var0: java_awt_dnd_DropTargetEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetEvent'
     * @return original return type: 'void'
     */
    dragExitSync(var0: java_awt_dnd_DropTargetEvent | null): void;
    /**
     * @return original return type: 'int'
     */
    getDefaultActions(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getDefaultActionsSync(): number;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetListener'
     * @return original return type: 'void'
     */
    removeDropTargetListener(var0: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetListener'
     * @return original return type: 'void'
     */
    removeDropTargetListenerSync(var0: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null): void;
    /**
     * @return original return type: 'java.awt.datatransfer.FlavorMap'
     */
    getFlavorMap(): Promise<java_awt_datatransfer_FlavorMap | null>;
    /**
     * @return original return type: 'java.awt.datatransfer.FlavorMap'
     */
    getFlavorMapSync(): java_awt_datatransfer_FlavorMap | null;
    /**
     * @param var0 original type: 'java.awt.datatransfer.FlavorMap'
     * @return original return type: 'void'
     */
    setFlavorMap(var0: java_awt_datatransfer_FlavorMap | JavaInterfaceProxy<java_awt_datatransfer_FlavorMapInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.datatransfer.FlavorMap'
     * @return original return type: 'void'
     */
    setFlavorMapSync(var0: java_awt_datatransfer_FlavorMap | JavaInterfaceProxy<java_awt_datatransfer_FlavorMapInterface> | null): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.dnd.DropTargetListener'
     * @return original return type: 'java.awt.dnd.DropTarget'
     */
    static newInstance(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null): Promise<DropTarget>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'java.awt.dnd.DropTargetListener'
     * @return original return type: 'java.awt.dnd.DropTarget'
     */
    static newInstance(var0: java_awt_Component | null, var1: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null): Promise<DropTarget>;
    /**
     * @return original return type: 'java.awt.dnd.DropTarget'
     */
    static newInstance(): Promise<DropTarget>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.dnd.DropTargetListener'
     * @param var3 original type: 'boolean'
     * @return original return type: 'java.awt.dnd.DropTarget'
     */
    static newInstance(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null, var3: java_lang_Boolean | boolean): Promise<DropTarget>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.dnd.DropTargetListener'
     * @param var3 original type: 'boolean'
     * @param var4 original type: 'java.awt.datatransfer.FlavorMap'
     * @return original return type: 'java.awt.dnd.DropTarget'
     */
    static newInstance(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null, var3: java_lang_Boolean | boolean, var4: java_awt_datatransfer_FlavorMap | JavaInterfaceProxy<java_awt_datatransfer_FlavorMapInterface> | null): Promise<DropTarget>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.dnd.DropTargetListener'
     */
    constructor(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null);
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'java.awt.dnd.DropTargetListener'
     */
    constructor(var0: java_awt_Component | null, var1: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null);
    constructor();
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.dnd.DropTargetListener'
     * @param var3 original type: 'boolean'
     */
    constructor(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null, var3: java_lang_Boolean | boolean);
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.awt.dnd.DropTargetListener'
     * @param var3 original type: 'boolean'
     * @param var4 original type: 'java.awt.datatransfer.FlavorMap'
     */
    constructor(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_awt_dnd_DropTargetListener | JavaInterfaceProxy<java_awt_dnd_DropTargetListenerInterface> | null, var3: java_lang_Boolean | boolean, var4: java_awt_datatransfer_FlavorMap | JavaInterfaceProxy<java_awt_datatransfer_FlavorMapInterface> | null);
}
declare const DropTarget_base: typeof DropTargetClass;
/**
 * Class java.awt.dnd.DropTarget.
 *
 * This actually imports the java class for further use.
 * The class {@link DropTargetClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DropTarget extends DropTarget_base {
}
export default DropTarget;
//# sourceMappingURL=DropTarget.d.ts.map