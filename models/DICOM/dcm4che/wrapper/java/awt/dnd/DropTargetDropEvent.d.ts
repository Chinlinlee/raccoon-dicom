import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Point as java_awt_Point } from "./../Point";
import { DataFlavor as java_awt_datatransfer_DataFlavor } from "./../datatransfer/DataFlavor";
import { List as java_util_List } from "./../../util/List";
import { Transferable as java_awt_datatransfer_Transferable } from "./../datatransfer/Transferable";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Boolean as java_lang_Boolean } from "./../../lang/Boolean";
import { DropTargetContext as java_awt_dnd_DropTargetContext } from "./DropTargetContext";
import { Long as java_lang_Long } from "./../../lang/Long";
import { Class as java_lang_Class } from "./../../lang/Class";
/**
 * This class just defines types, you should import {@link DropTargetDropEvent} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DropTargetDropEventClass extends JavaClass {
    /**
     * @return original return type: 'java.awt.Point'
     */
    getLocation(): Promise<java_awt_Point | null>;
    /**
     * @return original return type: 'java.awt.Point'
     */
    getLocationSync(): java_awt_Point | null;
    /**
     * @return original return type: 'void'
     */
    rejectDrop(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    rejectDropSync(): void;
    /**
     * @param var0 original type: 'java.awt.datatransfer.DataFlavor'
     * @return original return type: 'boolean'
     */
    isDataFlavorSupported(var0: java_awt_datatransfer_DataFlavor | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.awt.datatransfer.DataFlavor'
     * @return original return type: 'boolean'
     */
    isDataFlavorSupportedSync(var0: java_awt_datatransfer_DataFlavor | null): boolean;
    /**
     * @return original return type: 'int'
     */
    getSourceActions(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getSourceActionsSync(): number;
    /**
     * @return original return type: 'java.awt.datatransfer.DataFlavor[]'
     */
    getCurrentDataFlavors(): Promise<(java_awt_datatransfer_DataFlavor | null)[] | null>;
    /**
     * @return original return type: 'java.awt.datatransfer.DataFlavor[]'
     */
    getCurrentDataFlavorsSync(): (java_awt_datatransfer_DataFlavor | null)[] | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getCurrentDataFlavorsAsList(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getCurrentDataFlavorsAsListSync(): java_util_List | null;
    /**
     * @return original return type: 'java.awt.datatransfer.Transferable'
     */
    getTransferable(): Promise<java_awt_datatransfer_Transferable | null>;
    /**
     * @return original return type: 'java.awt.datatransfer.Transferable'
     */
    getTransferableSync(): java_awt_datatransfer_Transferable | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    acceptDrop(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    acceptDropSync(var0: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    dropComplete(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    dropCompleteSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'int'
     */
    getDropAction(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getDropActionSync(): number;
    /**
     * @return original return type: 'boolean'
     */
    isLocalTransfer(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isLocalTransferSync(): boolean;
    /**
     * @return original return type: 'java.awt.dnd.DropTargetContext'
     */
    getDropTargetContext(): Promise<java_awt_dnd_DropTargetContext | null>;
    /**
     * @return original return type: 'java.awt.dnd.DropTargetContext'
     */
    getDropTargetContextSync(): java_awt_dnd_DropTargetContext | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'java.lang.Object'
     */
    getSource(): Promise<BasicOrJavaType | null>;
    /**
     * @return original return type: 'java.lang.Object'
     */
    getSourceSync(): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetContext'
     * @param var1 original type: 'java.awt.Point'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'java.awt.dnd.DropTargetDropEvent'
     */
    static newInstance(var0: java_awt_dnd_DropTargetContext | null, var1: java_awt_Point | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<DropTargetDropEvent>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetContext'
     * @param var1 original type: 'java.awt.Point'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'boolean'
     * @return original return type: 'java.awt.dnd.DropTargetDropEvent'
     */
    static newInstance(var0: java_awt_dnd_DropTargetContext | null, var1: java_awt_Point | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Boolean | boolean): Promise<DropTargetDropEvent>;
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetContext'
     * @param var1 original type: 'java.awt.Point'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     */
    constructor(var0: java_awt_dnd_DropTargetContext | null, var1: java_awt_Point | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number);
    /**
     * @param var0 original type: 'java.awt.dnd.DropTargetContext'
     * @param var1 original type: 'java.awt.Point'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'boolean'
     */
    constructor(var0: java_awt_dnd_DropTargetContext | null, var1: java_awt_Point | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Boolean | boolean);
}
declare const DropTargetDropEvent_base: typeof DropTargetDropEventClass;
/**
 * Class java.awt.dnd.DropTargetDropEvent.
 *
 * This actually imports the java class for further use.
 * The class {@link DropTargetDropEventClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DropTargetDropEvent extends DropTargetDropEvent_base {
}
export default DropTargetDropEvent;
//# sourceMappingURL=DropTargetDropEvent.d.ts.map