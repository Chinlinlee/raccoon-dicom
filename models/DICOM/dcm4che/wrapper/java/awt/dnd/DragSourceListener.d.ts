import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { DragSourceDragEvent as java_awt_dnd_DragSourceDragEvent } from "./DragSourceDragEvent";
import { DragSourceEvent as java_awt_dnd_DragSourceEvent } from "./DragSourceEvent";
import { DragSourceDropEvent as java_awt_dnd_DragSourceDropEvent } from "./DragSourceDropEvent";
/**
 * This class just defines types, you should import {@link DragSourceListener} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DragSourceListenerClass extends JavaClass {
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dragEnter(var0: java_awt_dnd_DragSourceDragEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dragEnterSync(var0: java_awt_dnd_DragSourceDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dragOver(var0: java_awt_dnd_DragSourceDragEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dragOverSync(var0: java_awt_dnd_DragSourceDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dropActionChanged(var0: java_awt_dnd_DragSourceDragEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dropActionChangedSync(var0: java_awt_dnd_DragSourceDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceEvent'
     * @return original return type: 'void'
     */
    dragExit(var0: java_awt_dnd_DragSourceEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceEvent'
     * @return original return type: 'void'
     */
    dragExitSync(var0: java_awt_dnd_DragSourceEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDropEvent'
     * @return original return type: 'void'
     */
    dragDropEnd(var0: java_awt_dnd_DragSourceDropEvent | null): Promise<void>;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDropEvent'
     * @return original return type: 'void'
     */
    dragDropEndSync(var0: java_awt_dnd_DragSourceDropEvent | null): void;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createDragSourceListenerProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface DragSourceListenerInterface {
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dragEnter(var0: java_awt_dnd_DragSourceDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dragOver(var0: java_awt_dnd_DragSourceDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDragEvent'
     * @return original return type: 'void'
     */
    dropActionChanged(var0: java_awt_dnd_DragSourceDragEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceEvent'
     * @return original return type: 'void'
     */
    dragExit(var0: java_awt_dnd_DragSourceEvent | null): void;
    /**
     * @param var0 original type: 'java.awt.dnd.DragSourceDropEvent'
     * @return original return type: 'void'
     */
    dragDropEnd(var0: java_awt_dnd_DragSourceDropEvent | null): void;
}
/**
 * Create a proxy for the {@link DragSourceListener} interface.
 * All required methods in {@link DragSourceListenerInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createDragSourceListenerProxy(methods: DragSourceListenerInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<DragSourceListenerInterface>;
declare const DragSourceListener_base: typeof DragSourceListenerClass;
/**
 * Class java.awt.dnd.DragSourceListener.
 *
 * This actually imports the java class for further use.
 * The class {@link DragSourceListenerClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DragSourceListener extends DragSourceListener_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default DragSourceListener;
//# sourceMappingURL=DragSourceListener.d.ts.map