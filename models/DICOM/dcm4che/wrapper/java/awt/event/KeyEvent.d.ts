import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Long as java_lang_Long } from "./../../lang/Long";
import { Component as java_awt_Component } from "./../Component";
import { Class as java_lang_Class } from "./../../lang/Class";
/**
 * This class just defines types, you should import {@link KeyEvent} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class KeyEventClass extends JavaClass {
    /**
     * Original type: 'int'
     */
    static readonly KEY_FIRST: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_LAST: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_TYPED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_PRESSED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_RELEASED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ENTER: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_BACK_SPACE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_TAB: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CANCEL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CLEAR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SHIFT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CONTROL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ALT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PAUSE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CAPS_LOCK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ESCAPE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SPACE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PAGE_UP: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PAGE_DOWN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_END: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_HOME: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_LEFT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_UP: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_RIGHT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DOWN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_COMMA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_MINUS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PERIOD: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SLASH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_0: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_1: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_2: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_3: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_4: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_5: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_6: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_7: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_8: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_9: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SEMICOLON: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_EQUALS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_A: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_B: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_C: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_D: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_E: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_G: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_H: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_I: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_J: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_K: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_L: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_M: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_N: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_O: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_P: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_Q: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_R: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_S: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_T: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_U: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_V: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_W: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_X: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_Y: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_Z: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_OPEN_BRACKET: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_BACK_SLASH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CLOSE_BRACKET: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD0: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD1: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD2: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD3: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD4: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD5: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD6: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD7: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD8: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMPAD9: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_MULTIPLY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ADD: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SEPARATER: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SEPARATOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SUBTRACT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DECIMAL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DIVIDE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DELETE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUM_LOCK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_SCROLL_LOCK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F1: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F2: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F3: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F4: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F5: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F6: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F7: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F8: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F9: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F10: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F11: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F12: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F13: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F14: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F15: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F16: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F17: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F18: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F19: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F20: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F21: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F22: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F23: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_F24: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PRINTSCREEN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_INSERT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_HELP: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_META: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_BACK_QUOTE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_QUOTE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KP_UP: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KP_DOWN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KP_LEFT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KP_RIGHT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_GRAVE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_ACUTE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_CIRCUMFLEX: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_TILDE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_MACRON: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_BREVE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_ABOVEDOT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_DIAERESIS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_ABOVERING: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_DOUBLEACUTE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_CARON: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_CEDILLA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_OGONEK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_IOTA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_VOICED_SOUND: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DEAD_SEMIVOICED_SOUND: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_AMPERSAND: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ASTERISK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_QUOTEDBL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_LESS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_GREATER: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_BRACELEFT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_BRACERIGHT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_AT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_COLON: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CIRCUMFLEX: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_DOLLAR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_EURO_SIGN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_EXCLAMATION_MARK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_INVERTED_EXCLAMATION_MARK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_LEFT_PARENTHESIS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NUMBER_SIGN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PLUS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_RIGHT_PARENTHESIS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_UNDERSCORE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_WINDOWS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CONTEXT_MENU: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_FINAL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CONVERT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_NONCONVERT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ACCEPT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_MODECHANGE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KANA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KANJI: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ALPHANUMERIC: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KATAKANA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_HIRAGANA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_FULL_WIDTH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_HALF_WIDTH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ROMAN_CHARACTERS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ALL_CANDIDATES: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PREVIOUS_CANDIDATE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CODE_INPUT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_JAPANESE_KATAKANA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_JAPANESE_HIRAGANA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_JAPANESE_ROMAN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_KANA_LOCK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_INPUT_METHOD_ON_OFF: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_CUT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_COPY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PASTE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_UNDO: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_AGAIN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_FIND: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_PROPS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_STOP: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_COMPOSE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_ALT_GRAPH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_BEGIN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VK_UNDEFINED: java_lang_Integer | number;
    /**
     * Original type: 'char'
     */
    static readonly CHAR_UNDEFINED: string | null;
    /**
     * Original type: 'int'
     */
    static readonly KEY_LOCATION_UNKNOWN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_LOCATION_STANDARD: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_LOCATION_LEFT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_LOCATION_RIGHT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly KEY_LOCATION_NUMPAD: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly SHIFT_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CTRL_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly META_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ALT_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ALT_GRAPH_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly BUTTON1_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly BUTTON2_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly BUTTON3_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly SHIFT_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CTRL_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly META_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ALT_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly BUTTON1_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly BUTTON2_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly BUTTON3_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ALT_GRAPH_DOWN_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly COMPONENT_FIRST: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly COMPONENT_LAST: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly COMPONENT_MOVED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly COMPONENT_RESIZED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly COMPONENT_SHOWN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly COMPONENT_HIDDEN: java_lang_Integer | number;
    /**
     * Original type: 'long'
     */
    static readonly COMPONENT_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly CONTAINER_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly FOCUS_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly KEY_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly MOUSE_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly MOUSE_MOTION_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly WINDOW_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly ACTION_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly ADJUSTMENT_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly ITEM_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly TEXT_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly INPUT_METHOD_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly PAINT_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly INVOCATION_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly HIERARCHY_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly HIERARCHY_BOUNDS_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly MOUSE_WHEEL_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly WINDOW_STATE_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'long'
     */
    static readonly WINDOW_FOCUS_EVENT_MASK: java_lang_Long | bigint | number;
    /**
     * Original type: 'int'
     */
    static readonly RESERVED_ID_MAX: java_lang_Integer | number;
    /**
     * @return original return type: 'java.lang.String'
     */
    paramString(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    paramStringSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    isActionKey(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isActionKeySync(): boolean;
    /**
     * @return original return type: 'int'
     */
    getKeyCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getKeyCodeSync(): number;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'void'
     */
    setKeyChar(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'void'
     */
    setKeyCharSync(var0: string | null): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setModifiers(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setModifiersSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'char'
     */
    getKeyChar(): Promise<string | null>;
    /**
     * @return original return type: 'char'
     */
    getKeyCharSync(): string | null;
    /**
     * @return original return type: 'int'
     */
    getExtendedKeyCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getExtendedKeyCodeSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.lang.String'
     */
    static getKeyText(var0: java_lang_Integer | number): Promise<string | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.lang.String'
     */
    static getKeyTextSync(var0: java_lang_Integer | number): string | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.lang.String'
     */
    static getKeyModifiersText(var0: java_lang_Integer | number): Promise<string | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.lang.String'
     */
    static getKeyModifiersTextSync(var0: java_lang_Integer | number): string | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    static getExtendedKeyCodeForChar(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    static getExtendedKeyCodeForCharSync(var0: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setKeyCode(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setKeyCodeSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'int'
     */
    getKeyLocation(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getKeyLocationSync(): number;
    /**
     * @return original return type: 'int'
     */
    getModifiers(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getModifiersSync(): number;
    /**
     * @return original return type: 'void'
     */
    consume(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    consumeSync(): void;
    /**
     * @return original return type: 'boolean'
     */
    isControlDown(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isControlDownSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isShiftDown(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isShiftDownSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isConsumed(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isConsumedSync(): boolean;
    /**
     * @return original return type: 'long'
     */
    getWhen(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getWhenSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    static getMaskForButton(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    static getMaskForButtonSync(var0: java_lang_Integer | number): number;
    /**
     * @return original return type: 'boolean'
     */
    isMetaDown(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isMetaDownSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isAltDown(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isAltDownSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isAltGraphDown(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isAltGraphDownSync(): boolean;
    /**
     * @return original return type: 'int'
     */
    getModifiersEx(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getModifiersExSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.lang.String'
     */
    static getModifiersExText(var0: java_lang_Integer | number): Promise<string | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.lang.String'
     */
    static getModifiersExTextSync(var0: java_lang_Integer | number): string | null;
    /**
     * @return original return type: 'java.awt.Component'
     */
    getComponent(): Promise<java_awt_Component | null>;
    /**
     * @return original return type: 'java.awt.Component'
     */
    getComponentSync(): java_awt_Component | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    getID(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getIDSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    setSource(var0: BasicOrJavaType | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    setSourceSync(var0: BasicOrJavaType | null): void;
    /**
     * @return original return type: 'java.lang.Object'
     */
    getSource(): Promise<BasicOrJavaType | null>;
    /**
     * @return original return type: 'java.lang.Object'
     */
    getSourceSync(): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'char'
     * @return original return type: 'java.awt.event.KeyEvent'
     */
    static newInstance(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: string | null): Promise<KeyEvent>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'char'
     * @param var6 original type: 'int'
     * @return original return type: 'java.awt.event.KeyEvent'
     */
    static newInstance(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: string | null, var6: java_lang_Integer | number): Promise<KeyEvent>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @return original return type: 'java.awt.event.KeyEvent'
     */
    static newInstance(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number): Promise<KeyEvent>;
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'char'
     */
    constructor(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: string | null);
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'char'
     * @param var6 original type: 'int'
     */
    constructor(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: string | null, var6: java_lang_Integer | number);
    /**
     * @param var0 original type: 'java.awt.Component'
     * @param var1 original type: 'int'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     */
    constructor(var0: java_awt_Component | null, var1: java_lang_Integer | number, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number);
}
declare const KeyEvent_base: typeof KeyEventClass;
/**
 * Class java.awt.event.KeyEvent.
 *
 * This actually imports the java class for further use.
 * The class {@link KeyEventClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class KeyEvent extends KeyEvent_base {
}
export default KeyEvent;
//# sourceMappingURL=KeyEvent.d.ts.map