import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";
import { IntConsumer as java_util_function_IntConsumer, IntConsumerInterface as java_util_function_IntConsumerInterface } from "./function/IntConsumer";
/**
 * This class just defines types, you should import {@link IntSummaryStatistics} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IntSummaryStatisticsClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    accept(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    acceptSync(var0: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'java.util.IntSummaryStatistics'
     * @return original return type: 'void'
     */
    combine(var0: IntSummaryStatisticsClass | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.IntSummaryStatistics'
     * @return original return type: 'void'
     */
    combineSync(var0: IntSummaryStatisticsClass | null): void;
    /**
     * @return original return type: 'long'
     */
    getCount(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getCountSync(): number;
    /**
     * @return original return type: 'long'
     */
    getSum(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getSumSync(): number;
    /**
     * @return original return type: 'int'
     */
    getMin(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getMinSync(): number;
    /**
     * @return original return type: 'double'
     */
    getAverage(): Promise<number>;
    /**
     * @return original return type: 'double'
     */
    getAverageSync(): number;
    /**
     * @return original return type: 'int'
     */
    getMax(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getMaxSync(): number;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.util.function.IntConsumer'
     * @return original return type: 'java.util.function.IntConsumer'
     */
    andThen(var0: java_util_function_IntConsumer | JavaInterfaceProxy<java_util_function_IntConsumerInterface> | null): Promise<java_util_function_IntConsumer | null>;
    /**
     * @param var0 original type: 'java.util.function.IntConsumer'
     * @return original return type: 'java.util.function.IntConsumer'
     */
    andThenSync(var0: java_util_function_IntConsumer | JavaInterfaceProxy<java_util_function_IntConsumerInterface> | null): java_util_function_IntConsumer | null;
    /**
     * @return original return type: 'java.util.IntSummaryStatistics'
     */
    static newInstance(): Promise<IntSummaryStatistics>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'long'
     * @return original return type: 'java.util.IntSummaryStatistics'
     */
    static newInstance(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Long | bigint | number): Promise<IntSummaryStatistics>;
    constructor();
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'long'
     */
    constructor(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Long | bigint | number);
}
declare const IntSummaryStatistics_base: typeof IntSummaryStatisticsClass;
/**
 * Class java.util.IntSummaryStatistics.
 *
 * This actually imports the java class for further use.
 * The class {@link IntSummaryStatisticsClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IntSummaryStatistics extends IntSummaryStatistics_base {
}
export default IntSummaryStatistics;
//# sourceMappingURL=IntSummaryStatistics.d.ts.map