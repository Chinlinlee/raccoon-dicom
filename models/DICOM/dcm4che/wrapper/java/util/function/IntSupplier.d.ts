import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
/**
 * This class just defines types, you should import {@link IntSupplier} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IntSupplierClass extends JavaClass {
    /**
     * @return original return type: 'int'
     */
    getAsInt(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getAsIntSync(): number;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIntSupplierProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IntSupplierInterface {
    /**
     * @return original return type: 'int'
     */
    getAsInt(): number;
}
/**
 * Create a proxy for the {@link IntSupplier} interface.
 * All required methods in {@link IntSupplierInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIntSupplierProxy(methods: IntSupplierInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IntSupplierInterface>;
declare const IntSupplier_base: typeof IntSupplierClass;
/**
 * Class java.util.function.IntSupplier.
 *
 * This actually imports the java class for further use.
 * The class {@link IntSupplierClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IntSupplier extends IntSupplier_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IntSupplier;
//# sourceMappingURL=IntSupplier.d.ts.map