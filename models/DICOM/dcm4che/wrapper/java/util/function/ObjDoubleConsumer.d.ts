import { JavaClass, BasicOrJavaType, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Double as java_lang_Double } from "./../../lang/Double";
/**
 * This class just defines types, you should import {@link ObjDoubleConsumer} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ObjDoubleConsumerClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'double'
     * @return original return type: 'void'
     */
    accept(var0: BasicOrJavaType | null, var1: java_lang_Double | number): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'double'
     * @return original return type: 'void'
     */
    acceptSync(var0: BasicOrJavaType | null, var1: java_lang_Double | number): void;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createObjDoubleConsumerProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface ObjDoubleConsumerInterface {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'double'
     * @return original return type: 'void'
     */
    accept(var0: BasicOrJavaType | null, var1: java_lang_Double | number): void;
}
/**
 * Create a proxy for the {@link ObjDoubleConsumer} interface.
 * All required methods in {@link ObjDoubleConsumerInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createObjDoubleConsumerProxy(methods: ObjDoubleConsumerInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<ObjDoubleConsumerInterface>;
declare const ObjDoubleConsumer_base: typeof ObjDoubleConsumerClass;
/**
 * Class java.util.function.ObjDoubleConsumer.
 *
 * This actually imports the java class for further use.
 * The class {@link ObjDoubleConsumerClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ObjDoubleConsumer extends ObjDoubleConsumer_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default ObjDoubleConsumer;
//# sourceMappingURL=ObjDoubleConsumer.d.ts.map