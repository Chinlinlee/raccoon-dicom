import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Set as java_util_Set } from "./Set";
import { Enumeration as java_util_Enumeration } from "./Enumeration";
import { Locale as java_util_Locale } from "./Locale";
import { ClassLoader as java_lang_ClassLoader } from "./../lang/ClassLoader";
import { ResourceBundle$Control as java_util_ResourceBundle$Control } from "./ResourceBundle$Control";
import { Module as java_lang_Module } from "./../lang/Module";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link ResourceBundle} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ResourceBundleClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    containsKey(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    containsKeySync(var0: string | null): boolean;
    /**
     * @return original return type: 'java.util.Set'
     */
    keySet(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    keySetSync(): java_util_Set | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getObject(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getObjectSync(var0: string | null): BasicOrJavaType | null;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getKeys(): Promise<java_util_Enumeration | null>;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getKeysSync(): java_util_Enumeration | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getString(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getStringSync(var0: string | null): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getBaseBundleName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getBaseBundleNameSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.lang.ClassLoader'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null, var1: java_util_Locale | null, var2: java_lang_ClassLoader | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.lang.ClassLoader'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null, var1: java_util_Locale | null, var2: java_lang_ClassLoader | null): ResourceBundle | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.lang.ClassLoader'
     * @param var3 original type: 'java.util.ResourceBundle$Control'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null, var1: java_util_Locale | null, var2: java_lang_ClassLoader | null, var3: java_util_ResourceBundle$Control | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.lang.ClassLoader'
     * @param var3 original type: 'java.util.ResourceBundle$Control'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null, var1: java_util_Locale | null, var2: java_lang_ClassLoader | null, var3: java_util_ResourceBundle$Control | null): ResourceBundle | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.ResourceBundle$Control'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null, var1: java_util_ResourceBundle$Control | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.ResourceBundle$Control'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null, var1: java_util_ResourceBundle$Control | null): ResourceBundle | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null): ResourceBundle | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null, var1: java_util_Locale | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null, var1: java_util_Locale | null): ResourceBundle | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.Module'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null, var1: java_lang_Module | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.Module'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null, var1: java_lang_Module | null): ResourceBundle | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.lang.Module'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null, var1: java_util_Locale | null, var2: java_lang_Module | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.lang.Module'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null, var1: java_util_Locale | null, var2: java_lang_Module | null): ResourceBundle | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.util.ResourceBundle$Control'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundle(var0: string | null, var1: java_util_Locale | null, var2: java_util_ResourceBundle$Control | null): Promise<ResourceBundle | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @param var2 original type: 'java.util.ResourceBundle$Control'
     * @return original return type: 'java.util.ResourceBundle'
     */
    static getBundleSync(var0: string | null, var1: java_util_Locale | null, var2: java_util_ResourceBundle$Control | null): ResourceBundle | null;
    /**
     * @return original return type: 'java.util.Locale'
     */
    getLocale(): Promise<java_util_Locale | null>;
    /**
     * @return original return type: 'java.util.Locale'
     */
    getLocaleSync(): java_util_Locale | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getStringArray(var0: string | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getStringArraySync(var0: string | null): (string | null)[] | null;
    /**
     * @return original return type: 'void'
     */
    static clearCache(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    static clearCacheSync(): void;
    /**
     * @param var0 original type: 'java.lang.ClassLoader'
     * @return original return type: 'void'
     */
    static clearCache(var0: java_lang_ClassLoader | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.ClassLoader'
     * @return original return type: 'void'
     */
    static clearCacheSync(var0: java_lang_ClassLoader | null): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const ResourceBundle_base: typeof ResourceBundleClass;
/**
 * Class java.util.ResourceBundle.
 *
 * This actually imports the java class for further use.
 * The class {@link ResourceBundleClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ResourceBundle extends ResourceBundle_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default ResourceBundle;
//# sourceMappingURL=ResourceBundle.d.ts.map