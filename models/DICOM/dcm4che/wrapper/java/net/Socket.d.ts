import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { SocketAddress as java_net_SocketAddress } from "./SocketAddress";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { InputStream as java_io_InputStream } from "./../io/InputStream";
import { SocketChannel as java_nio_channels_SocketChannel } from "./../nio/channels/SocketChannel";
import { OutputStream as java_io_OutputStream } from "./../io/OutputStream";
import { InetAddress as java_net_InetAddress } from "./InetAddress";
import { SocketOption as java_net_SocketOption, SocketOptionInterface as java_net_SocketOptionInterface } from "./SocketOption";
import { Set as java_util_Set } from "./../util/Set";
import { Boolean as java_lang_Boolean } from "./../lang/Boolean";
import { SocketImplFactory as java_net_SocketImplFactory, SocketImplFactoryInterface as java_net_SocketImplFactoryInterface } from "./SocketImplFactory";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";
import { Proxy as java_net_Proxy } from "./Proxy";
/**
 * This class just defines types, you should import {@link Socket} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class SocketClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @param var0 original type: 'java.net.SocketAddress'
     * @return original return type: 'void'
     */
    connect(var0: java_net_SocketAddress | null): Promise<void>;
    /**
     * @param var0 original type: 'java.net.SocketAddress'
     * @return original return type: 'void'
     */
    connectSync(var0: java_net_SocketAddress | null): void;
    /**
     * @param var0 original type: 'java.net.SocketAddress'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    connect(var0: java_net_SocketAddress | null, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'java.net.SocketAddress'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    connectSync(var0: java_net_SocketAddress | null, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    close(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    closeSync(): void;
    /**
     * @return original return type: 'int'
     */
    getPort(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getPortSync(): number;
    /**
     * @return original return type: 'java.io.InputStream'
     */
    getInputStream(): Promise<java_io_InputStream | null>;
    /**
     * @return original return type: 'java.io.InputStream'
     */
    getInputStreamSync(): java_io_InputStream | null;
    /**
     * @param var0 original type: 'java.net.SocketAddress'
     * @return original return type: 'void'
     */
    bind(var0: java_net_SocketAddress | null): Promise<void>;
    /**
     * @param var0 original type: 'java.net.SocketAddress'
     * @return original return type: 'void'
     */
    bindSync(var0: java_net_SocketAddress | null): void;
    /**
     * @return original return type: 'java.nio.channels.SocketChannel'
     */
    getChannel(): Promise<java_nio_channels_SocketChannel | null>;
    /**
     * @return original return type: 'java.nio.channels.SocketChannel'
     */
    getChannelSync(): java_nio_channels_SocketChannel | null;
    /**
     * @return original return type: 'java.io.OutputStream'
     */
    getOutputStream(): Promise<java_io_OutputStream | null>;
    /**
     * @return original return type: 'java.io.OutputStream'
     */
    getOutputStreamSync(): java_io_OutputStream | null;
    /**
     * @return original return type: 'boolean'
     */
    isClosed(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isClosedSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isConnected(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isConnectedSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isBound(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isBoundSync(): boolean;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    getInetAddress(): Promise<java_net_InetAddress | null>;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    getInetAddressSync(): java_net_InetAddress | null;
    /**
     * @param var0 original type: 'java.net.SocketOption'
     * @return original return type: 'java.lang.Object'
     */
    getOption(var0: java_net_SocketOption | JavaInterfaceProxy<java_net_SocketOptionInterface> | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.net.SocketOption'
     * @return original return type: 'java.lang.Object'
     */
    getOptionSync(var0: java_net_SocketOption | JavaInterfaceProxy<java_net_SocketOptionInterface> | null): BasicOrJavaType | null;
    /**
     * @return original return type: 'int'
     */
    getLocalPort(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getLocalPortSync(): number;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    getLocalAddress(): Promise<java_net_InetAddress | null>;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    getLocalAddressSync(): java_net_InetAddress | null;
    /**
     * @return original return type: 'boolean'
     */
    isInputShutdown(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isInputShutdownSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isOutputShutdown(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isOutputShutdownSync(): boolean;
    /**
     * @param var0 original type: 'java.net.SocketOption'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.net.Socket'
     */
    setOption(var0: java_net_SocketOption | JavaInterfaceProxy<java_net_SocketOptionInterface> | null, var1: BasicOrJavaType | null): Promise<Socket | null>;
    /**
     * @param var0 original type: 'java.net.SocketOption'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.net.Socket'
     */
    setOptionSync(var0: java_net_SocketOption | JavaInterfaceProxy<java_net_SocketOptionInterface> | null, var1: BasicOrJavaType | null): Socket | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    sendUrgentData(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    sendUrgentDataSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    shutdownInput(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    shutdownInputSync(): void;
    /**
     * @return original return type: 'void'
     */
    shutdownOutput(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    shutdownOutputSync(): void;
    /**
     * @return original return type: 'java.util.Set'
     */
    supportedOptions(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    supportedOptionsSync(): java_util_Set | null;
    /**
     * @return original return type: 'java.net.SocketAddress'
     */
    getRemoteSocketAddress(): Promise<java_net_SocketAddress | null>;
    /**
     * @return original return type: 'java.net.SocketAddress'
     */
    getRemoteSocketAddressSync(): java_net_SocketAddress | null;
    /**
     * @return original return type: 'java.net.SocketAddress'
     */
    getLocalSocketAddress(): Promise<java_net_SocketAddress | null>;
    /**
     * @return original return type: 'java.net.SocketAddress'
     */
    getLocalSocketAddressSync(): java_net_SocketAddress | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setTcpNoDelay(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setTcpNoDelaySync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'boolean'
     */
    getTcpNoDelay(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    getTcpNoDelaySync(): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    setSoLinger(var0: java_lang_Boolean | boolean, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    setSoLingerSync(var0: java_lang_Boolean | boolean, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'int'
     */
    getSoLinger(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getSoLingerSync(): number;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setOOBInline(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setOOBInlineSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'boolean'
     */
    getOOBInline(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    getOOBInlineSync(): boolean;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setSoTimeout(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setSoTimeoutSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'int'
     */
    getSoTimeout(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getSoTimeoutSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setSendBufferSize(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setSendBufferSizeSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'int'
     */
    getSendBufferSize(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getSendBufferSizeSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setReceiveBufferSize(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setReceiveBufferSizeSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'int'
     */
    getReceiveBufferSize(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getReceiveBufferSizeSync(): number;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setKeepAlive(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setKeepAliveSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'boolean'
     */
    getKeepAlive(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    getKeepAliveSync(): boolean;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setTrafficClass(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setTrafficClassSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'int'
     */
    getTrafficClass(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getTrafficClassSync(): number;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setReuseAddress(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setReuseAddressSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'boolean'
     */
    getReuseAddress(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    getReuseAddressSync(): boolean;
    /**
     * @param var0 original type: 'java.net.SocketImplFactory'
     * @return original return type: 'void'
     */
    static setSocketImplFactory(var0: java_net_SocketImplFactory | JavaInterfaceProxy<java_net_SocketImplFactoryInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.net.SocketImplFactory'
     * @return original return type: 'void'
     */
    static setSocketImplFactorySync(var0: java_net_SocketImplFactory | JavaInterfaceProxy<java_net_SocketImplFactoryInterface> | null): void;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    setPerformancePreferences(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    setPerformancePreferencesSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @param var1 original type: 'int'
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(var0: java_net_InetAddress | null, var1: java_lang_Integer | number): Promise<Socket>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.net.InetAddress'
     * @param var3 original type: 'int'
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(var0: string | null, var1: java_lang_Integer | number, var2: java_net_InetAddress | null, var3: java_lang_Integer | number): Promise<Socket>;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.net.InetAddress'
     * @param var3 original type: 'int'
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(var0: java_net_InetAddress | null, var1: java_lang_Integer | number, var2: java_net_InetAddress | null, var3: java_lang_Integer | number): Promise<Socket>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean): Promise<Socket>;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(var0: java_net_InetAddress | null, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean): Promise<Socket>;
    /**
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(): Promise<Socket>;
    /**
     * @param var0 original type: 'java.net.Proxy'
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(var0: java_net_Proxy | null): Promise<Socket>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @return original return type: 'java.net.Socket'
     */
    static newInstance(var0: string | null, var1: java_lang_Integer | number): Promise<Socket>;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @param var1 original type: 'int'
     */
    constructor(var0: java_net_InetAddress | null, var1: java_lang_Integer | number);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.net.InetAddress'
     * @param var3 original type: 'int'
     */
    constructor(var0: string | null, var1: java_lang_Integer | number, var2: java_net_InetAddress | null, var3: java_lang_Integer | number);
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.net.InetAddress'
     * @param var3 original type: 'int'
     */
    constructor(var0: java_net_InetAddress | null, var1: java_lang_Integer | number, var2: java_net_InetAddress | null, var3: java_lang_Integer | number);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     */
    constructor(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean);
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     */
    constructor(var0: java_net_InetAddress | null, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean);
    constructor();
    /**
     * @param var0 original type: 'java.net.Proxy'
     */
    constructor(var0: java_net_Proxy | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     */
    constructor(var0: string | null, var1: java_lang_Integer | number);
}
declare const Socket_base: typeof SocketClass;
/**
 * Class java.net.Socket.
 *
 * This actually imports the java class for further use.
 * The class {@link SocketClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Socket extends Socket_base {
}
export default Socket;
//# sourceMappingURL=Socket.d.ts.map