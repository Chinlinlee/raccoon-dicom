/// <reference types="node" />
import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Stream as java_util_stream_Stream } from "./../util/stream/Stream";
import { Enumeration as java_util_Enumeration } from "./../util/Enumeration";
import { List as java_util_List } from "./../util/List";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { InetAddress as java_net_InetAddress } from "./InetAddress";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link NetworkInterface} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class NetworkInterfaceClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.net.NetworkInterface'
     */
    getParent(): Promise<NetworkInterface | null>;
    /**
     * @return original return type: 'java.net.NetworkInterface'
     */
    getParentSync(): NetworkInterface | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.NetworkInterface'
     */
    static getByName(var0: string | null): Promise<NetworkInterface | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.NetworkInterface'
     */
    static getByNameSync(var0: string | null): NetworkInterface | null;
    /**
     * @return original return type: 'int'
     */
    getIndex(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getIndexSync(): number;
    /**
     * @return original return type: 'java.util.stream.Stream'
     */
    static networkInterfaces(): Promise<java_util_stream_Stream | null>;
    /**
     * @return original return type: 'java.util.stream.Stream'
     */
    static networkInterfacesSync(): java_util_stream_Stream | null;
    /**
     * @return original return type: 'java.util.stream.Stream'
     */
    inetAddresses(): Promise<java_util_stream_Stream | null>;
    /**
     * @return original return type: 'java.util.stream.Stream'
     */
    inetAddressesSync(): java_util_stream_Stream | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getDisplayName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getDisplayNameSync(): string | null;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getInetAddresses(): Promise<java_util_Enumeration | null>;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getInetAddressesSync(): java_util_Enumeration | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getInterfaceAddresses(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getInterfaceAddressesSync(): java_util_List | null;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getSubInterfaces(): Promise<java_util_Enumeration | null>;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getSubInterfacesSync(): java_util_Enumeration | null;
    /**
     * @return original return type: 'java.util.stream.Stream'
     */
    subInterfaces(): Promise<java_util_stream_Stream | null>;
    /**
     * @return original return type: 'java.util.stream.Stream'
     */
    subInterfacesSync(): java_util_stream_Stream | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.net.NetworkInterface'
     */
    static getByIndex(var0: java_lang_Integer | number): Promise<NetworkInterface | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.net.NetworkInterface'
     */
    static getByIndexSync(var0: java_lang_Integer | number): NetworkInterface | null;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @return original return type: 'java.net.NetworkInterface'
     */
    static getByInetAddress(var0: java_net_InetAddress | null): Promise<NetworkInterface | null>;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @return original return type: 'java.net.NetworkInterface'
     */
    static getByInetAddressSync(var0: java_net_InetAddress | null): NetworkInterface | null;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    static getNetworkInterfaces(): Promise<java_util_Enumeration | null>;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    static getNetworkInterfacesSync(): java_util_Enumeration | null;
    /**
     * @return original return type: 'boolean'
     */
    isUp(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isUpSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isLoopback(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isLoopbackSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isPointToPoint(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isPointToPointSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    supportsMulticast(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    supportsMulticastSync(): boolean;
    /**
     * @return original return type: 'byte[]'
     */
    getHardwareAddress(): Promise<Buffer | null>;
    /**
     * @return original return type: 'byte[]'
     */
    getHardwareAddressSync(): Buffer | null;
    /**
     * @return original return type: 'int'
     */
    getMTU(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getMTUSync(): number;
    /**
     * @return original return type: 'boolean'
     */
    isVirtual(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isVirtualSync(): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const NetworkInterface_base: typeof NetworkInterfaceClass;
/**
 * Class java.net.NetworkInterface.
 *
 * This actually imports the java class for further use.
 * The class {@link NetworkInterfaceClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class NetworkInterface extends NetworkInterface_base {
}
export default NetworkInterface;
//# sourceMappingURL=NetworkInterface.d.ts.map