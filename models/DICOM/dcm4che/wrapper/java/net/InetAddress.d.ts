/// <reference types="node" />
import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { NetworkInterface as java_net_NetworkInterface } from "./NetworkInterface";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link InetAddress} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class InetAddressClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.String'
     */
    getHostAddress(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getHostAddressSync(): string | null;
    /**
     * @return original return type: 'byte[]'
     */
    getAddress(): Promise<Buffer | null>;
    /**
     * @return original return type: 'byte[]'
     */
    getAddressSync(): Buffer | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress'
     */
    static getByName(var0: string | null): Promise<InetAddress | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress'
     */
    static getByNameSync(var0: string | null): InetAddress | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getHostName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getHostNameSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    isLinkLocalAddress(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isLinkLocalAddressSync(): boolean;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    isReachable(var0: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    isReachableSync(var0: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'java.net.NetworkInterface'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    isReachable(var0: java_net_NetworkInterface | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.net.NetworkInterface'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    isReachableSync(var0: java_net_NetworkInterface | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress[]'
     */
    static getAllByName(var0: string | null): Promise<(InetAddress | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress[]'
     */
    static getAllByNameSync(var0: string | null): (InetAddress | null)[] | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    static getByAddress(var0: Buffer | null): Promise<InetAddress | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    static getByAddressSync(var0: Buffer | null): InetAddress | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    static getByAddress(var0: string | null, var1: Buffer | null): Promise<InetAddress | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    static getByAddressSync(var0: string | null, var1: Buffer | null): InetAddress | null;
    /**
     * @return original return type: 'boolean'
     */
    isMulticastAddress(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isMulticastAddressSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isAnyLocalAddress(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isAnyLocalAddressSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isLoopbackAddress(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isLoopbackAddressSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isSiteLocalAddress(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isSiteLocalAddressSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isMCGlobal(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isMCGlobalSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isMCNodeLocal(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isMCNodeLocalSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isMCLinkLocal(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isMCLinkLocalSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isMCSiteLocal(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isMCSiteLocalSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isMCOrgLocal(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isMCOrgLocalSync(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getCanonicalHostName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getCanonicalHostNameSync(): string | null;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    static getLoopbackAddress(): Promise<InetAddress | null>;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    static getLoopbackAddressSync(): InetAddress | null;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    static getLocalHost(): Promise<InetAddress | null>;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    static getLocalHostSync(): InetAddress | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const InetAddress_base: typeof InetAddressClass;
/**
 * Class java.net.InetAddress.
 *
 * This actually imports the java class for further use.
 * The class {@link InetAddressClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class InetAddress extends InetAddress_base {
}
export default InetAddress;
//# sourceMappingURL=InetAddress.d.ts.map