import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Set as java_util_Set } from "./../../util/Set";
import { Optional as java_util_Optional } from "./../../util/Optional";
import { Long as java_lang_Long } from "./../Long";
import { Integer as java_lang_Integer } from "./../Integer";
import { Class as java_lang_Class } from "./../Class";
/**
 * This class just defines types, you should import {@link ModuleDescriptor$Requires} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ModuleDescriptor$RequiresClass extends JavaClass {
    /**
     * @return original return type: 'java.util.Set'
     */
    modifiers(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    modifiersSync(): java_util_Set | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    name(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    nameSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Requires'
     * @return original return type: 'int'
     */
    compareTo(var0: ModuleDescriptor$RequiresClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Requires'
     * @return original return type: 'int'
     */
    compareToSync(var0: ModuleDescriptor$RequiresClass | null): number;
    /**
     * @return original return type: 'java.util.Optional'
     */
    rawCompiledVersion(): Promise<java_util_Optional | null>;
    /**
     * @return original return type: 'java.util.Optional'
     */
    rawCompiledVersionSync(): java_util_Optional | null;
    /**
     * @return original return type: 'java.util.Optional'
     */
    compiledVersion(): Promise<java_util_Optional | null>;
    /**
     * @return original return type: 'java.util.Optional'
     */
    compiledVersionSync(): java_util_Optional | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const ModuleDescriptor$Requires_base: typeof ModuleDescriptor$RequiresClass;
/**
 * Class java.lang.module.ModuleDescriptor$Requires.
 *
 * This actually imports the java class for further use.
 * The class {@link ModuleDescriptor$RequiresClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ModuleDescriptor$Requires extends ModuleDescriptor$Requires_base {
}
export default ModuleDescriptor$Requires;
//# sourceMappingURL=ModuleDescriptor$Requires.d.ts.map