import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { ModuleDescriptor$Version as java_lang_module_ModuleDescriptor$Version } from "./ModuleDescriptor$Version";
import { Set as java_util_Set, SetInterface as java_util_SetInterface } from "./../../util/Set";
import { ModuleDescriptor$Exports as java_lang_module_ModuleDescriptor$Exports } from "./ModuleDescriptor$Exports";
import { ModuleDescriptor$Opens as java_lang_module_ModuleDescriptor$Opens } from "./ModuleDescriptor$Opens";
import { ModuleDescriptor$Provides as java_lang_module_ModuleDescriptor$Provides } from "./ModuleDescriptor$Provides";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../util/List";
import { ModuleDescriptor as java_lang_module_ModuleDescriptor } from "./ModuleDescriptor";
import { ModuleDescriptor$Requires as java_lang_module_ModuleDescriptor$Requires } from "./ModuleDescriptor$Requires";
import { Long as java_lang_Long } from "./../Long";
import { Integer as java_lang_Integer } from "./../Integer";
import { Class as java_lang_Class } from "./../Class";
/**
 * This class just defines types, you should import {@link ModuleDescriptor$Builder} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ModuleDescriptor$BuilderClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    version(var0: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    versionSync(var0: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Version'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    version(var0: java_lang_module_ModuleDescriptor$Version | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Version'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    versionSync(var0: java_lang_module_ModuleDescriptor$Version | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    packages(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    packagesSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exports(var0: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exportsSync(var0: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exports(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null, var2: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exportsSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null, var2: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exports(var0: string | null, var1: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exportsSync(var0: string | null, var1: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exports(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exportsSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Exports'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exports(var0: java_lang_module_ModuleDescriptor$Exports | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Exports'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    exportsSync(var0: java_lang_module_ModuleDescriptor$Exports | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opens(var0: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opensSync(var0: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opens(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null, var2: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opensSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null, var2: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opens(var0: string | null, var1: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opensSync(var0: string | null, var1: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Opens'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opens(var0: java_lang_module_ModuleDescriptor$Opens | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Opens'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opensSync(var0: java_lang_module_ModuleDescriptor$Opens | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opens(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    opensSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    uses(var0: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    usesSync(var0: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Provides'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    provides(var0: java_lang_module_ModuleDescriptor$Provides | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Provides'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    providesSync(var0: java_lang_module_ModuleDescriptor$Provides | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    provides(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    providesSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): ModuleDescriptor$Builder | null;
    /**
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    build(): Promise<java_lang_module_ModuleDescriptor | null>;
    /**
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    buildSync(): java_lang_module_ModuleDescriptor | null;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Requires'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requires(var0: java_lang_module_ModuleDescriptor$Requires | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor$Requires'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requiresSync(var0: java_lang_module_ModuleDescriptor$Requires | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.module.ModuleDescriptor$Version'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requires(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null, var2: java_lang_module_ModuleDescriptor$Version | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.module.ModuleDescriptor$Version'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requiresSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null, var2: java_lang_module_ModuleDescriptor$Version | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requires(var0: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requiresSync(var0: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requires(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    requiresSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    mainClass(var0: string | null): Promise<ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    mainClassSync(var0: string | null): ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const ModuleDescriptor$Builder_base: typeof ModuleDescriptor$BuilderClass;
/**
 * Class java.lang.module.ModuleDescriptor$Builder.
 *
 * This actually imports the java class for further use.
 * The class {@link ModuleDescriptor$BuilderClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ModuleDescriptor$Builder extends ModuleDescriptor$Builder_base {
}
export default ModuleDescriptor$Builder;
//# sourceMappingURL=ModuleDescriptor$Builder.d.ts.map