import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Set as java_util_Set, SetInterface as java_util_SetInterface } from "./../../util/Set";
import { Optional as java_util_Optional } from "./../../util/Optional";
import { InputStream as java_io_InputStream } from "./../../io/InputStream";
import { Supplier as java_util_function_Supplier, SupplierInterface as java_util_function_SupplierInterface } from "./../../util/function/Supplier";
import { ByteBuffer as java_nio_ByteBuffer } from "./../../nio/ByteBuffer";
import { ModuleDescriptor$Builder as java_lang_module_ModuleDescriptor$Builder } from "./ModuleDescriptor$Builder";
import { Long as java_lang_Long } from "./../Long";
import { Integer as java_lang_Integer } from "./../Integer";
import { Class as java_lang_Class } from "./../Class";
/**
 * This class just defines types, you should import {@link ModuleDescriptor} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ModuleDescriptorClass extends JavaClass {
    /**
     * @return original return type: 'java.util.Set'
     */
    modifiers(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    modifiersSync(): java_util_Set | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    name(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    nameSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'java.util.Optional'
     */
    version(): Promise<java_util_Optional | null>;
    /**
     * @return original return type: 'java.util.Optional'
     */
    versionSync(): java_util_Optional | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor'
     * @return original return type: 'int'
     */
    compareTo(var0: ModuleDescriptorClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.module.ModuleDescriptor'
     * @return original return type: 'int'
     */
    compareToSync(var0: ModuleDescriptorClass | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @return original return type: 'java.util.Set'
     */
    packages(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    packagesSync(): java_util_Set | null;
    /**
     * @return original return type: 'boolean'
     */
    isOpen(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isOpenSync(): boolean;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static read(var0: java_io_InputStream | null): Promise<ModuleDescriptor | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static readSync(var0: java_io_InputStream | null): ModuleDescriptor | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'java.util.function.Supplier'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static read(var0: java_io_InputStream | null, var1: java_util_function_Supplier | JavaInterfaceProxy<java_util_function_SupplierInterface> | null): Promise<ModuleDescriptor | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'java.util.function.Supplier'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static readSync(var0: java_io_InputStream | null, var1: java_util_function_Supplier | JavaInterfaceProxy<java_util_function_SupplierInterface> | null): ModuleDescriptor | null;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static read(var0: java_nio_ByteBuffer | null): Promise<ModuleDescriptor | null>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static readSync(var0: java_nio_ByteBuffer | null): ModuleDescriptor | null;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @param var1 original type: 'java.util.function.Supplier'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static read(var0: java_nio_ByteBuffer | null, var1: java_util_function_Supplier | JavaInterfaceProxy<java_util_function_SupplierInterface> | null): Promise<ModuleDescriptor | null>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @param var1 original type: 'java.util.function.Supplier'
     * @return original return type: 'java.lang.module.ModuleDescriptor'
     */
    static readSync(var0: java_nio_ByteBuffer | null, var1: java_util_function_Supplier | JavaInterfaceProxy<java_util_function_SupplierInterface> | null): ModuleDescriptor | null;
    /**
     * @return original return type: 'java.util.Set'
     */
    exports(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    exportsSync(): java_util_Set | null;
    /**
     * @return original return type: 'java.util.Set'
     */
    opens(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    opensSync(): java_util_Set | null;
    /**
     * @return original return type: 'boolean'
     */
    isAutomatic(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isAutomaticSync(): boolean;
    /**
     * @return original return type: 'java.util.Set'
     */
    uses(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    usesSync(): java_util_Set | null;
    /**
     * @return original return type: 'java.util.Set'
     */
    provides(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    providesSync(): java_util_Set | null;
    /**
     * @return original return type: 'java.util.Set'
     */
    requires(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    requiresSync(): java_util_Set | null;
    /**
     * @return original return type: 'java.util.Optional'
     */
    mainClass(): Promise<java_util_Optional | null>;
    /**
     * @return original return type: 'java.util.Optional'
     */
    mainClassSync(): java_util_Optional | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toNameAndVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toNameAndVersionSync(): string | null;
    /**
     * @return original return type: 'java.util.Optional'
     */
    rawVersion(): Promise<java_util_Optional | null>;
    /**
     * @return original return type: 'java.util.Optional'
     */
    rawVersionSync(): java_util_Optional | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newModule(var0: string | null, var1: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<java_lang_module_ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Set'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newModuleSync(var0: string | null, var1: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): java_lang_module_ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newModule(var0: string | null): Promise<java_lang_module_ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newModuleSync(var0: string | null): java_lang_module_ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newOpenModule(var0: string | null): Promise<java_lang_module_ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newOpenModuleSync(var0: string | null): java_lang_module_ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newAutomaticModule(var0: string | null): Promise<java_lang_module_ModuleDescriptor$Builder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.module.ModuleDescriptor$Builder'
     */
    static newAutomaticModuleSync(var0: string | null): java_lang_module_ModuleDescriptor$Builder | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const ModuleDescriptor_base: typeof ModuleDescriptorClass;
/**
 * Class java.lang.module.ModuleDescriptor.
 *
 * This actually imports the java class for further use.
 * The class {@link ModuleDescriptorClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ModuleDescriptor extends ModuleDescriptor_base {
}
export default ModuleDescriptor;
//# sourceMappingURL=ModuleDescriptor.d.ts.map