import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Class as java_lang_Class } from "./Class";
import { InputStream as java_io_InputStream } from "./../io/InputStream";
import { URL as java_net_URL } from "./../net/URL";
import { Enumeration as java_util_Enumeration } from "./../util/Enumeration";
import { Package as java_lang_Package } from "./Package";
import { Stream as java_util_stream_Stream } from "./../util/stream/Stream";
import { Module as java_lang_Module } from "./Module";
import { Boolean as java_lang_Boolean } from "./Boolean";
import { Long as java_lang_Long } from "./Long";
import { Integer as java_lang_Integer } from "./Integer";
/**
 * This class just defines types, you should import {@link ClassLoader} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ClassLoaderClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Class'
     */
    loadClass(var0: string | null): Promise<java_lang_Class | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Class'
     */
    loadClassSync(var0: string | null): java_lang_Class | null;
    /**
     * @return original return type: 'java.lang.ClassLoader'
     */
    static getPlatformClassLoader(): Promise<ClassLoader | null>;
    /**
     * @return original return type: 'java.lang.ClassLoader'
     */
    static getPlatformClassLoaderSync(): ClassLoader | null;
    /**
     * @return original return type: 'java.lang.ClassLoader'
     */
    static getSystemClassLoader(): Promise<ClassLoader | null>;
    /**
     * @return original return type: 'java.lang.ClassLoader'
     */
    static getSystemClassLoaderSync(): ClassLoader | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    static getSystemResourceAsStream(var0: string | null): Promise<java_io_InputStream | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    static getSystemResourceAsStreamSync(var0: string | null): java_io_InputStream | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    getResourceAsStream(var0: string | null): Promise<java_io_InputStream | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    getResourceAsStreamSync(var0: string | null): java_io_InputStream | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URL'
     */
    static getSystemResource(var0: string | null): Promise<java_net_URL | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URL'
     */
    static getSystemResourceSync(var0: string | null): java_net_URL | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URL'
     */
    getResource(var0: string | null): Promise<java_net_URL | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URL'
     */
    getResourceSync(var0: string | null): java_net_URL | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Enumeration'
     */
    getResources(var0: string | null): Promise<java_util_Enumeration | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Enumeration'
     */
    getResourcesSync(var0: string | null): java_util_Enumeration | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Package'
     */
    getDefinedPackage(var0: string | null): Promise<java_lang_Package | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Package'
     */
    getDefinedPackageSync(var0: string | null): java_lang_Package | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.stream.Stream'
     */
    resources(var0: string | null): Promise<java_util_stream_Stream | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.stream.Stream'
     */
    resourcesSync(var0: string | null): java_util_stream_Stream | null;
    /**
     * @return original return type: 'boolean'
     */
    isRegisteredAsParallelCapable(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isRegisteredAsParallelCapableSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Enumeration'
     */
    static getSystemResources(var0: string | null): Promise<java_util_Enumeration | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Enumeration'
     */
    static getSystemResourcesSync(var0: string | null): java_util_Enumeration | null;
    /**
     * @return original return type: 'java.lang.ClassLoader'
     */
    getParent(): Promise<ClassLoader | null>;
    /**
     * @return original return type: 'java.lang.ClassLoader'
     */
    getParentSync(): ClassLoader | null;
    /**
     * @return original return type: 'java.lang.Module'
     */
    getUnnamedModule(): Promise<java_lang_Module | null>;
    /**
     * @return original return type: 'java.lang.Module'
     */
    getUnnamedModuleSync(): java_lang_Module | null;
    /**
     * @return original return type: 'java.lang.Package[]'
     */
    getDefinedPackages(): Promise<(java_lang_Package | null)[] | null>;
    /**
     * @return original return type: 'java.lang.Package[]'
     */
    getDefinedPackagesSync(): (java_lang_Package | null)[] | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setDefaultAssertionStatus(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setDefaultAssertionStatusSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    setPackageAssertionStatus(var0: string | null, var1: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    setPackageAssertionStatusSync(var0: string | null, var1: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    setClassAssertionStatus(var0: string | null, var1: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    setClassAssertionStatusSync(var0: string | null, var1: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'void'
     */
    clearAssertionStatus(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    clearAssertionStatusSync(): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const ClassLoader_base: typeof ClassLoaderClass;
/**
 * Class java.lang.ClassLoader.
 *
 * This actually imports the java class for further use.
 * The class {@link ClassLoaderClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ClassLoader extends ClassLoader_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default ClassLoader;
//# sourceMappingURL=ClassLoader.d.ts.map