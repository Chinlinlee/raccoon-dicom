import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Class as java_lang_Class } from "./../../lang/Class";
import { FileStoreAttributeView as java_nio_file_attribute_FileStoreAttributeView } from "./attribute/FileStoreAttributeView";
import { Long as java_lang_Long } from "./../../lang/Long";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
/**
 * This class just defines types, you should import {@link FileStore} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileStoreClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    name(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    nameSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    type(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    typeSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    isReadOnly(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isReadOnlySync(): boolean;
    /**
     * @return original return type: 'long'
     */
    getTotalSpace(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getTotalSpaceSync(): number;
    /**
     * @return original return type: 'long'
     */
    getUsableSpace(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getUsableSpaceSync(): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getAttribute(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getAttributeSync(var0: string | null): BasicOrJavaType | null;
    /**
     * @return original return type: 'long'
     */
    getUnallocatedSpace(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getUnallocatedSpaceSync(): number;
    /**
     * @return original return type: 'long'
     */
    getBlockSize(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getBlockSizeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    supportsFileAttributeView(var0: java_lang_Class | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    supportsFileAttributeViewSync(var0: java_lang_Class | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    supportsFileAttributeView(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    supportsFileAttributeViewSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.nio.file.attribute.FileStoreAttributeView'
     */
    getFileStoreAttributeView(var0: java_lang_Class | null): Promise<java_nio_file_attribute_FileStoreAttributeView | null>;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.nio.file.attribute.FileStoreAttributeView'
     */
    getFileStoreAttributeViewSync(var0: java_lang_Class | null): java_nio_file_attribute_FileStoreAttributeView | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const FileStore_base: typeof FileStoreClass;
/**
 * Class java.nio.file.FileStore.
 *
 * This actually imports the java class for further use.
 * The class {@link FileStoreClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileStore extends FileStore_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default FileStore;
//# sourceMappingURL=FileStore.d.ts.map