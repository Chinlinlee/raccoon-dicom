import { JavaClass, BasicOrJavaType } from "java-bridge";
import { InetAddress as java_net_InetAddress } from "./../../net/InetAddress";
import { MulticastChannel as java_nio_channels_MulticastChannel } from "./MulticastChannel";
import { NetworkInterface as java_net_NetworkInterface } from "./../../net/NetworkInterface";
import { Long as java_lang_Long } from "./../../lang/Long";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Class as java_lang_Class } from "./../../lang/Class";
/**
 * This class just defines types, you should import {@link MembershipKey} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class MembershipKeyClass extends JavaClass {
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    group(): Promise<java_net_InetAddress | null>;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    groupSync(): java_net_InetAddress | null;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @return original return type: 'java.nio.channels.MembershipKey'
     */
    block(var0: java_net_InetAddress | null): Promise<MembershipKey | null>;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @return original return type: 'java.nio.channels.MembershipKey'
     */
    blockSync(var0: java_net_InetAddress | null): MembershipKey | null;
    /**
     * @return original return type: 'java.nio.channels.MulticastChannel'
     */
    channel(): Promise<java_nio_channels_MulticastChannel | null>;
    /**
     * @return original return type: 'java.nio.channels.MulticastChannel'
     */
    channelSync(): java_nio_channels_MulticastChannel | null;
    /**
     * @return original return type: 'void'
     */
    drop(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    dropSync(): void;
    /**
     * @return original return type: 'boolean'
     */
    isValid(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isValidSync(): boolean;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @return original return type: 'java.nio.channels.MembershipKey'
     */
    unblock(var0: java_net_InetAddress | null): Promise<MembershipKey | null>;
    /**
     * @param var0 original type: 'java.net.InetAddress'
     * @return original return type: 'java.nio.channels.MembershipKey'
     */
    unblockSync(var0: java_net_InetAddress | null): MembershipKey | null;
    /**
     * @return original return type: 'java.net.NetworkInterface'
     */
    networkInterface(): Promise<java_net_NetworkInterface | null>;
    /**
     * @return original return type: 'java.net.NetworkInterface'
     */
    networkInterfaceSync(): java_net_NetworkInterface | null;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    sourceAddress(): Promise<java_net_InetAddress | null>;
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    sourceAddressSync(): java_net_InetAddress | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const MembershipKey_base: typeof MembershipKeyClass;
/**
 * Class java.nio.channels.MembershipKey.
 *
 * This actually imports the java class for further use.
 * The class {@link MembershipKeyClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class MembershipKey extends MembershipKey_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default MembershipKey;
//# sourceMappingURL=MembershipKey.d.ts.map