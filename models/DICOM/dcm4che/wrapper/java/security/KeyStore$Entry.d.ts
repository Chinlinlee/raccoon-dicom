import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Set as java_util_Set } from "./../util/Set";
/**
 * This class just defines types, you should import {@link KeyStore$Entry} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class KeyStore$EntryClass extends JavaClass {
    /**
     * @return original return type: 'java.util.Set'
     */
    getAttributes(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    getAttributesSync(): java_util_Set | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createKeyStore$EntryProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface KeyStore$EntryInterface {
    /**
     * @return original return type: 'java.util.Set'
     */
    getAttributes?(): java_util_Set | null;
}
/**
 * Create a proxy for the {@link KeyStore$Entry} interface.
 * All required methods in {@link KeyStore$EntryInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createKeyStore$EntryProxy(methods: KeyStore$EntryInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<KeyStore$EntryInterface>;
declare const KeyStore$Entry_base: typeof KeyStore$EntryClass;
/**
 * Class java.security.KeyStore$Entry.
 *
 * This actually imports the java class for further use.
 * The class {@link KeyStore$EntryClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class KeyStore$Entry extends KeyStore$Entry_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default KeyStore$Entry;
//# sourceMappingURL=KeyStore$Entry.d.ts.map