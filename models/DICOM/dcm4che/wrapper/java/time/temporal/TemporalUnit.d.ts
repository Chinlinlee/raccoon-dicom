import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Temporal as java_time_temporal_Temporal, TemporalInterface as java_time_temporal_TemporalInterface } from "./Temporal";
import { Duration as java_time_Duration } from "./../Duration";
import { Long as java_lang_Long } from "./../../lang/Long";
/**
 * This class just defines types, you should import {@link TemporalUnit} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class TemporalUnitClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'long'
     */
    between(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): Promise<number>;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'long'
     */
    betweenSync(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): number;
    /**
     * @return original return type: 'boolean'
     */
    isDateBased(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isDateBasedSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isTimeBased(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isTimeBasedSync(): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'boolean'
     */
    isSupportedBy(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'boolean'
     */
    isSupportedBySync(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): boolean;
    /**
     * @return original return type: 'java.time.Duration'
     */
    getDuration(): Promise<java_time_Duration | null>;
    /**
     * @return original return type: 'java.time.Duration'
     */
    getDurationSync(): java_time_Duration | null;
    /**
     * @return original return type: 'boolean'
     */
    isDurationEstimated(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isDurationEstimatedSync(): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    addTo(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    addToSync(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createTemporalUnitProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface TemporalUnitInterface {
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): string;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'long'
     */
    between(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): number;
    /**
     * @return original return type: 'boolean'
     */
    isDateBased(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isTimeBased(): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'boolean'
     */
    isSupportedBy?(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): boolean;
    /**
     * @return original return type: 'java.time.Duration'
     */
    getDuration(): java_time_Duration | null;
    /**
     * @return original return type: 'boolean'
     */
    isDurationEstimated(): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    addTo(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
}
/**
 * Create a proxy for the {@link TemporalUnit} interface.
 * All required methods in {@link TemporalUnitInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createTemporalUnitProxy(methods: TemporalUnitInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<TemporalUnitInterface>;
declare const TemporalUnit_base: typeof TemporalUnitClass;
/**
 * Class java.time.temporal.TemporalUnit.
 *
 * This actually imports the java class for further use.
 * The class {@link TemporalUnitClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class TemporalUnit extends TemporalUnit_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default TemporalUnit;
//# sourceMappingURL=TemporalUnit.d.ts.map