import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { TemporalUnit as java_time_temporal_TemporalUnit, TemporalUnitInterface as java_time_temporal_TemporalUnitInterface } from "./temporal/TemporalUnit";
import { Long as java_lang_Long } from "./../lang/Long";
import { TemporalAmount as java_time_temporal_TemporalAmount, TemporalAmountInterface as java_time_temporal_TemporalAmountInterface } from "./temporal/TemporalAmount";
import { CharSequence as java_lang_CharSequence, CharSequenceInterface as java_lang_CharSequenceInterface } from "./../lang/CharSequence";
import { Temporal as java_time_temporal_Temporal, TemporalInterface as java_time_temporal_TemporalInterface } from "./temporal/Temporal";
import { List as java_util_List } from "./../util/List";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";
/**
 * This class just defines types, you should import {@link Duration} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DurationClass extends JavaClass {
    /**
     * Original type: 'java.time.Duration'
     */
    static readonly ZERO: DurationClass | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    get(var0: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Promise<number>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    getSync(var0: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.time.Duration'
     */
    abs(): Promise<Duration | null>;
    /**
     * @return original return type: 'java.time.Duration'
     */
    absSync(): Duration | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'int'
     */
    compareTo(var0: DurationClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'int'
     */
    compareToSync(var0: DurationClass | null): number;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    static of(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    static ofSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Duration | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.Duration'
     */
    static from(var0: java_time_temporal_TemporalAmount | JavaInterfaceProxy<java_time_temporal_TemporalAmountInterface> | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.Duration'
     */
    static fromSync(var0: java_time_temporal_TemporalAmount | JavaInterfaceProxy<java_time_temporal_TemporalAmountInterface> | null): Duration | null;
    /**
     * @return original return type: 'long'
     */
    toMillis(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    toMillisSync(): number;
    /**
     * @return original return type: 'long'
     */
    toNanos(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    toNanosSync(): number;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.Duration'
     */
    static parse(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.Duration'
     */
    static parseSync(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): Duration | null;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.Duration'
     */
    static between(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.Duration'
     */
    static betweenSync(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null, var1: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): Duration | null;
    /**
     * @return original return type: 'long'
     */
    toSeconds(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    toSecondsSync(): number;
    /**
     * @return original return type: 'long'
     */
    getSeconds(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    getSecondsSync(): number;
    /**
     * @return original return type: 'int'
     */
    getNano(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getNanoSync(): number;
    /**
     * @return original return type: 'long'
     */
    toMinutes(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    toMinutesSync(): number;
    /**
     * @return original return type: 'long'
     */
    toHours(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    toHoursSync(): number;
    /**
     * @return original return type: 'long'
     */
    toDays(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    toDaysSync(): number;
    /**
     * @return original return type: 'boolean'
     */
    isNegative(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isNegativeSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isZero(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isZeroSync(): boolean;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Duration'
     */
    plus(var0: DurationClass | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Duration'
     */
    plusSync(var0: DurationClass | null): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Duration | null;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    addTo(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    addToSync(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofNanos(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofNanosSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofSeconds(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofSecondsSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofSeconds(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofSecondsSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getUnits(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getUnitsSync(): java_util_List | null;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    subtractFrom(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    subtractFromSync(var0: java_time_temporal_Temporal | JavaInterfaceProxy<java_time_temporal_TemporalInterface> | null): java_time_temporal_Temporal | null;
    /**
     * @return original return type: 'java.time.Duration'
     */
    negated(): Promise<Duration | null>;
    /**
     * @return original return type: 'java.time.Duration'
     */
    negatedSync(): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusNanos(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusNanosSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusSeconds(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusSecondsSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusMillis(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusMillisSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    multipliedBy(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    multipliedBySync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusDays(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusDaysSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusHours(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusHoursSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusMinutes(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    plusMinutesSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Duration'
     */
    minus(var0: DurationClass | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Duration'
     */
    minusSync(var0: DurationClass | null): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofDays(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofDaysSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofHours(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofHoursSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofMinutes(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofMinutesSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofMillis(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    static ofMillisSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    withSeconds(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    withSecondsSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.Duration'
     */
    withNanos(var0: java_lang_Integer | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.Duration'
     */
    withNanosSync(var0: java_lang_Integer | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusDays(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusDaysSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusHours(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusHoursSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusMinutes(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusMinutesSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusSeconds(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusSecondsSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusMillis(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusMillisSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusNanos(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    minusNanosSync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    dividedBy(var0: java_lang_Long | bigint | number): Promise<Duration | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Duration'
     */
    dividedBySync(var0: java_lang_Long | bigint | number): Duration | null;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'long'
     */
    dividedBy(var0: DurationClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.time.Duration'
     * @return original return type: 'long'
     */
    dividedBySync(var0: DurationClass | null): number;
    /**
     * @return original return type: 'long'
     */
    toDaysPart(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    toDaysPartSync(): number;
    /**
     * @return original return type: 'int'
     */
    toHoursPart(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    toHoursPartSync(): number;
    /**
     * @return original return type: 'int'
     */
    toMinutesPart(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    toMinutesPartSync(): number;
    /**
     * @return original return type: 'int'
     */
    toSecondsPart(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    toSecondsPartSync(): number;
    /**
     * @return original return type: 'int'
     */
    toMillisPart(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    toMillisPartSync(): number;
    /**
     * @return original return type: 'int'
     */
    toNanosPart(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    toNanosPartSync(): number;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    truncatedTo(var0: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Promise<Duration | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Duration'
     */
    truncatedToSync(var0: java_time_temporal_TemporalUnit | JavaInterfaceProxy<java_time_temporal_TemporalUnitInterface> | null): Duration | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const Duration_base: typeof DurationClass;
/**
 * Class java.time.Duration.
 *
 * This actually imports the java class for further use.
 * The class {@link DurationClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Duration extends Duration_base {
}
export default Duration;
//# sourceMappingURL=Duration.d.ts.map