import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { JsonGenerator as javax_json_stream_JsonGenerator } from "./stream/JsonGenerator";
import { OutputStream as java_io_OutputStream } from "./../../java/io/OutputStream";
import { Writer as java_io_Writer } from "./../../java/io/Writer";
import { JsonParser as javax_json_stream_JsonParser } from "./stream/JsonParser";
import { InputStream as java_io_InputStream } from "./../../java/io/InputStream";
import { Reader as java_io_Reader } from "./../../java/io/Reader";
import { JsonNumber as javax_json_JsonNumber } from "./JsonNumber";
import { Double as java_lang_Double } from "./../../java/lang/Double";
import { BigDecimal as java_math_BigDecimal } from "./../../java/math/BigDecimal";
import { JsonString as javax_json_JsonString } from "./JsonString";
import { Integer as java_lang_Integer } from "./../../java/lang/Integer";
import { Long as java_lang_Long } from "./../../java/lang/Long";
import { BigInteger as java_math_BigInteger } from "./../../java/math/BigInteger";
import { JsonPointer as javax_json_JsonPointer } from "./JsonPointer";
import { JsonPatch as javax_json_JsonPatch } from "./JsonPatch";
import { JsonArray as javax_json_JsonArray, JsonArrayInterface as javax_json_JsonArrayInterface } from "./JsonArray";
import { JsonStructure as javax_json_JsonStructure, JsonStructureInterface as javax_json_JsonStructureInterface } from "./JsonStructure";
import { JsonPatchBuilder as javax_json_JsonPatchBuilder } from "./JsonPatchBuilder";
import { JsonMergePatch as javax_json_JsonMergePatch } from "./JsonMergePatch";
import { JsonValue as javax_json_JsonValue, JsonValueInterface as javax_json_JsonValueInterface } from "./JsonValue";
import { JsonWriter as javax_json_JsonWriter } from "./JsonWriter";
import { JsonReader as javax_json_JsonReader } from "./JsonReader";
import { JsonArrayBuilder as javax_json_JsonArrayBuilder } from "./JsonArrayBuilder";
import { Collection as java_util_Collection, CollectionInterface as java_util_CollectionInterface } from "./../../java/util/Collection";
import { JsonGeneratorFactory as javax_json_stream_JsonGeneratorFactory } from "./stream/JsonGeneratorFactory";
import { Map as java_util_Map, MapInterface as java_util_MapInterface } from "./../../java/util/Map";
import { JsonReaderFactory as javax_json_JsonReaderFactory } from "./JsonReaderFactory";
import { JsonObjectBuilder as javax_json_JsonObjectBuilder } from "./JsonObjectBuilder";
import { JsonObject as javax_json_JsonObject, JsonObjectInterface as javax_json_JsonObjectInterface } from "./JsonObject";
import { JsonBuilderFactory as javax_json_JsonBuilderFactory } from "./JsonBuilderFactory";
import { JsonWriterFactory as javax_json_JsonWriterFactory } from "./JsonWriterFactory";
import { JsonParserFactory as javax_json_stream_JsonParserFactory } from "./stream/JsonParserFactory";
import { Class as java_lang_Class } from "./../../java/lang/Class";
/**
 * This class just defines types, you should import {@link Json} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class JsonClass extends JavaClass {
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'javax.json.stream.JsonGenerator'
     */
    static createGenerator(var0: java_io_OutputStream | null): Promise<javax_json_stream_JsonGenerator | null>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'javax.json.stream.JsonGenerator'
     */
    static createGeneratorSync(var0: java_io_OutputStream | null): javax_json_stream_JsonGenerator | null;
    /**
     * @param var0 original type: 'java.io.Writer'
     * @return original return type: 'javax.json.stream.JsonGenerator'
     */
    static createGenerator(var0: java_io_Writer | null): Promise<javax_json_stream_JsonGenerator | null>;
    /**
     * @param var0 original type: 'java.io.Writer'
     * @return original return type: 'javax.json.stream.JsonGenerator'
     */
    static createGeneratorSync(var0: java_io_Writer | null): javax_json_stream_JsonGenerator | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'javax.json.stream.JsonParser'
     */
    static createParser(var0: java_io_InputStream | null): Promise<javax_json_stream_JsonParser | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'javax.json.stream.JsonParser'
     */
    static createParserSync(var0: java_io_InputStream | null): javax_json_stream_JsonParser | null;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'javax.json.stream.JsonParser'
     */
    static createParser(var0: java_io_Reader | null): Promise<javax_json_stream_JsonParser | null>;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'javax.json.stream.JsonParser'
     */
    static createParserSync(var0: java_io_Reader | null): javax_json_stream_JsonParser | null;
    /**
     * @param var0 original type: 'double'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValue(var0: java_lang_Double | number): Promise<javax_json_JsonNumber | null>;
    /**
     * @param var0 original type: 'double'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValueSync(var0: java_lang_Double | number): javax_json_JsonNumber | null;
    /**
     * @param var0 original type: 'java.math.BigDecimal'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValue(var0: java_math_BigDecimal | null): Promise<javax_json_JsonNumber | null>;
    /**
     * @param var0 original type: 'java.math.BigDecimal'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValueSync(var0: java_math_BigDecimal | null): javax_json_JsonNumber | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.json.JsonString'
     */
    static createValue(var0: string | null): Promise<javax_json_JsonString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.json.JsonString'
     */
    static createValueSync(var0: string | null): javax_json_JsonString | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValue(var0: java_lang_Integer | number): Promise<javax_json_JsonNumber | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValueSync(var0: java_lang_Integer | number): javax_json_JsonNumber | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValue(var0: java_lang_Long | bigint | number): Promise<javax_json_JsonNumber | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValueSync(var0: java_lang_Long | bigint | number): javax_json_JsonNumber | null;
    /**
     * @param var0 original type: 'java.math.BigInteger'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValue(var0: java_math_BigInteger | null): Promise<javax_json_JsonNumber | null>;
    /**
     * @param var0 original type: 'java.math.BigInteger'
     * @return original return type: 'javax.json.JsonNumber'
     */
    static createValueSync(var0: java_math_BigInteger | null): javax_json_JsonNumber | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.json.JsonPointer'
     */
    static createPointer(var0: string | null): Promise<javax_json_JsonPointer | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.json.JsonPointer'
     */
    static createPointerSync(var0: string | null): javax_json_JsonPointer | null;
    /**
     * @param var0 original type: 'javax.json.JsonArray'
     * @return original return type: 'javax.json.JsonPatch'
     */
    static createPatch(var0: javax_json_JsonArray | JavaInterfaceProxy<javax_json_JsonArrayInterface> | null): Promise<javax_json_JsonPatch | null>;
    /**
     * @param var0 original type: 'javax.json.JsonArray'
     * @return original return type: 'javax.json.JsonPatch'
     */
    static createPatchSync(var0: javax_json_JsonArray | JavaInterfaceProxy<javax_json_JsonArrayInterface> | null): javax_json_JsonPatch | null;
    /**
     * @param var0 original type: 'javax.json.JsonStructure'
     * @param var1 original type: 'javax.json.JsonStructure'
     * @return original return type: 'javax.json.JsonPatch'
     */
    static createDiff(var0: javax_json_JsonStructure | JavaInterfaceProxy<javax_json_JsonStructureInterface> | null, var1: javax_json_JsonStructure | JavaInterfaceProxy<javax_json_JsonStructureInterface> | null): Promise<javax_json_JsonPatch | null>;
    /**
     * @param var0 original type: 'javax.json.JsonStructure'
     * @param var1 original type: 'javax.json.JsonStructure'
     * @return original return type: 'javax.json.JsonPatch'
     */
    static createDiffSync(var0: javax_json_JsonStructure | JavaInterfaceProxy<javax_json_JsonStructureInterface> | null, var1: javax_json_JsonStructure | JavaInterfaceProxy<javax_json_JsonStructureInterface> | null): javax_json_JsonPatch | null;
    /**
     * @param var0 original type: 'javax.json.JsonArray'
     * @return original return type: 'javax.json.JsonPatchBuilder'
     */
    static createPatchBuilder(var0: javax_json_JsonArray | JavaInterfaceProxy<javax_json_JsonArrayInterface> | null): Promise<javax_json_JsonPatchBuilder | null>;
    /**
     * @param var0 original type: 'javax.json.JsonArray'
     * @return original return type: 'javax.json.JsonPatchBuilder'
     */
    static createPatchBuilderSync(var0: javax_json_JsonArray | JavaInterfaceProxy<javax_json_JsonArrayInterface> | null): javax_json_JsonPatchBuilder | null;
    /**
     * @return original return type: 'javax.json.JsonPatchBuilder'
     */
    static createPatchBuilder(): Promise<javax_json_JsonPatchBuilder | null>;
    /**
     * @return original return type: 'javax.json.JsonPatchBuilder'
     */
    static createPatchBuilderSync(): javax_json_JsonPatchBuilder | null;
    /**
     * @param var0 original type: 'javax.json.JsonValue'
     * @return original return type: 'javax.json.JsonMergePatch'
     */
    static createMergePatch(var0: javax_json_JsonValue | JavaInterfaceProxy<javax_json_JsonValueInterface> | null): Promise<javax_json_JsonMergePatch | null>;
    /**
     * @param var0 original type: 'javax.json.JsonValue'
     * @return original return type: 'javax.json.JsonMergePatch'
     */
    static createMergePatchSync(var0: javax_json_JsonValue | JavaInterfaceProxy<javax_json_JsonValueInterface> | null): javax_json_JsonMergePatch | null;
    /**
     * @param var0 original type: 'javax.json.JsonValue'
     * @param var1 original type: 'javax.json.JsonValue'
     * @return original return type: 'javax.json.JsonMergePatch'
     */
    static createMergeDiff(var0: javax_json_JsonValue | JavaInterfaceProxy<javax_json_JsonValueInterface> | null, var1: javax_json_JsonValue | JavaInterfaceProxy<javax_json_JsonValueInterface> | null): Promise<javax_json_JsonMergePatch | null>;
    /**
     * @param var0 original type: 'javax.json.JsonValue'
     * @param var1 original type: 'javax.json.JsonValue'
     * @return original return type: 'javax.json.JsonMergePatch'
     */
    static createMergeDiffSync(var0: javax_json_JsonValue | JavaInterfaceProxy<javax_json_JsonValueInterface> | null, var1: javax_json_JsonValue | JavaInterfaceProxy<javax_json_JsonValueInterface> | null): javax_json_JsonMergePatch | null;
    /**
     * @param var0 original type: 'java.io.Writer'
     * @return original return type: 'javax.json.JsonWriter'
     */
    static createWriter(var0: java_io_Writer | null): Promise<javax_json_JsonWriter | null>;
    /**
     * @param var0 original type: 'java.io.Writer'
     * @return original return type: 'javax.json.JsonWriter'
     */
    static createWriterSync(var0: java_io_Writer | null): javax_json_JsonWriter | null;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'javax.json.JsonWriter'
     */
    static createWriter(var0: java_io_OutputStream | null): Promise<javax_json_JsonWriter | null>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'javax.json.JsonWriter'
     */
    static createWriterSync(var0: java_io_OutputStream | null): javax_json_JsonWriter | null;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'javax.json.JsonReader'
     */
    static createReader(var0: java_io_Reader | null): Promise<javax_json_JsonReader | null>;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'javax.json.JsonReader'
     */
    static createReaderSync(var0: java_io_Reader | null): javax_json_JsonReader | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'javax.json.JsonReader'
     */
    static createReader(var0: java_io_InputStream | null): Promise<javax_json_JsonReader | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'javax.json.JsonReader'
     */
    static createReaderSync(var0: java_io_InputStream | null): javax_json_JsonReader | null;
    /**
     * @return original return type: 'javax.json.JsonArrayBuilder'
     */
    static createArrayBuilder(): Promise<javax_json_JsonArrayBuilder | null>;
    /**
     * @return original return type: 'javax.json.JsonArrayBuilder'
     */
    static createArrayBuilderSync(): javax_json_JsonArrayBuilder | null;
    /**
     * @param var0 original type: 'java.util.Collection'
     * @return original return type: 'javax.json.JsonArrayBuilder'
     */
    static createArrayBuilder(var0: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): Promise<javax_json_JsonArrayBuilder | null>;
    /**
     * @param var0 original type: 'java.util.Collection'
     * @return original return type: 'javax.json.JsonArrayBuilder'
     */
    static createArrayBuilderSync(var0: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): javax_json_JsonArrayBuilder | null;
    /**
     * @param var0 original type: 'javax.json.JsonArray'
     * @return original return type: 'javax.json.JsonArrayBuilder'
     */
    static createArrayBuilder(var0: javax_json_JsonArray | JavaInterfaceProxy<javax_json_JsonArrayInterface> | null): Promise<javax_json_JsonArrayBuilder | null>;
    /**
     * @param var0 original type: 'javax.json.JsonArray'
     * @return original return type: 'javax.json.JsonArrayBuilder'
     */
    static createArrayBuilderSync(var0: javax_json_JsonArray | JavaInterfaceProxy<javax_json_JsonArrayInterface> | null): javax_json_JsonArrayBuilder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static encodePointer(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static encodePointerSync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static decodePointer(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static decodePointerSync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.stream.JsonGeneratorFactory'
     */
    static createGeneratorFactory(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<javax_json_stream_JsonGeneratorFactory | null>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.stream.JsonGeneratorFactory'
     */
    static createGeneratorFactorySync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): javax_json_stream_JsonGeneratorFactory | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonReaderFactory'
     */
    static createReaderFactory(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<javax_json_JsonReaderFactory | null>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonReaderFactory'
     */
    static createReaderFactorySync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): javax_json_JsonReaderFactory | null;
    /**
     * @param var0 original type: 'javax.json.JsonObject'
     * @return original return type: 'javax.json.JsonObjectBuilder'
     */
    static createObjectBuilder(var0: javax_json_JsonObject | JavaInterfaceProxy<javax_json_JsonObjectInterface> | null): Promise<javax_json_JsonObjectBuilder | null>;
    /**
     * @param var0 original type: 'javax.json.JsonObject'
     * @return original return type: 'javax.json.JsonObjectBuilder'
     */
    static createObjectBuilderSync(var0: javax_json_JsonObject | JavaInterfaceProxy<javax_json_JsonObjectInterface> | null): javax_json_JsonObjectBuilder | null;
    /**
     * @return original return type: 'javax.json.JsonObjectBuilder'
     */
    static createObjectBuilder(): Promise<javax_json_JsonObjectBuilder | null>;
    /**
     * @return original return type: 'javax.json.JsonObjectBuilder'
     */
    static createObjectBuilderSync(): javax_json_JsonObjectBuilder | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonObjectBuilder'
     */
    static createObjectBuilder(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<javax_json_JsonObjectBuilder | null>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonObjectBuilder'
     */
    static createObjectBuilderSync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): javax_json_JsonObjectBuilder | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonBuilderFactory'
     */
    static createBuilderFactory(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<javax_json_JsonBuilderFactory | null>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonBuilderFactory'
     */
    static createBuilderFactorySync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): javax_json_JsonBuilderFactory | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonWriterFactory'
     */
    static createWriterFactory(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<javax_json_JsonWriterFactory | null>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.JsonWriterFactory'
     */
    static createWriterFactorySync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): javax_json_JsonWriterFactory | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.stream.JsonParserFactory'
     */
    static createParserFactory(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<javax_json_stream_JsonParserFactory | null>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'javax.json.stream.JsonParserFactory'
     */
    static createParserFactorySync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): javax_json_stream_JsonParserFactory | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const Json_base: typeof JsonClass;
/**
 * Class javax.json.Json.
 *
 * This actually imports the java class for further use.
 * The class {@link JsonClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Json extends Json_base {
}
export default Json;
//# sourceMappingURL=Json.d.ts.map