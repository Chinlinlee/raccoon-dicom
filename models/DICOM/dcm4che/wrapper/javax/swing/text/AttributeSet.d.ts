import { JavaClass, BasicOrJavaType, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Enumeration as java_util_Enumeration } from "./../../../java/util/Enumeration";
/**
 * This class just defines types, you should import {@link AttributeSet} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AttributeSetClass extends JavaClass {
    /**
     * Original type: 'java.lang.Object'
     */
    static readonly NameAttribute: BasicOrJavaType | null;
    /**
     * Original type: 'java.lang.Object'
     */
    static readonly ResolveAttribute: BasicOrJavaType | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    isDefined(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    isDefinedSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'javax.swing.text.AttributeSet'
     * @return original return type: 'boolean'
     */
    isEqual(var0: AttributeSetClass | JavaInterfaceProxy<AttributeSetInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'javax.swing.text.AttributeSet'
     * @return original return type: 'boolean'
     */
    isEqualSync(var0: AttributeSetClass | JavaInterfaceProxy<AttributeSetInterface> | null): boolean;
    /**
     * @return original return type: 'int'
     */
    getAttributeCount(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getAttributeCountSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    getAttribute(var0: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    getAttributeSync(var0: BasicOrJavaType | null): BasicOrJavaType | null;
    /**
     * @return original return type: 'javax.swing.text.AttributeSet'
     */
    copyAttributes(): Promise<AttributeSet | null>;
    /**
     * @return original return type: 'javax.swing.text.AttributeSet'
     */
    copyAttributesSync(): AttributeSet | null;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getAttributeNames(): Promise<java_util_Enumeration | null>;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getAttributeNamesSync(): java_util_Enumeration | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    containsAttribute(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    containsAttributeSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'javax.swing.text.AttributeSet'
     * @return original return type: 'boolean'
     */
    containsAttributes(var0: AttributeSetClass | JavaInterfaceProxy<AttributeSetInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'javax.swing.text.AttributeSet'
     * @return original return type: 'boolean'
     */
    containsAttributesSync(var0: AttributeSetClass | JavaInterfaceProxy<AttributeSetInterface> | null): boolean;
    /**
     * @return original return type: 'javax.swing.text.AttributeSet'
     */
    getResolveParent(): Promise<AttributeSet | null>;
    /**
     * @return original return type: 'javax.swing.text.AttributeSet'
     */
    getResolveParentSync(): AttributeSet | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createAttributeSetProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface AttributeSetInterface {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    isDefined(var0: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'javax.swing.text.AttributeSet'
     * @return original return type: 'boolean'
     */
    isEqual(var0: AttributeSetClass | JavaInterfaceProxy<AttributeSetInterface> | null): boolean;
    /**
     * @return original return type: 'int'
     */
    getAttributeCount(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    getAttribute(var0: BasicOrJavaType | null): BasicOrJavaType | null;
    /**
     * @return original return type: 'javax.swing.text.AttributeSet'
     */
    copyAttributes(): AttributeSet | null;
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    getAttributeNames(): java_util_Enumeration | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    containsAttribute(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'javax.swing.text.AttributeSet'
     * @return original return type: 'boolean'
     */
    containsAttributes(var0: AttributeSetClass | JavaInterfaceProxy<AttributeSetInterface> | null): boolean;
    /**
     * @return original return type: 'javax.swing.text.AttributeSet'
     */
    getResolveParent(): AttributeSet | null;
}
/**
 * Create a proxy for the {@link AttributeSet} interface.
 * All required methods in {@link AttributeSetInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createAttributeSetProxy(methods: AttributeSetInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<AttributeSetInterface>;
declare const AttributeSet_base: typeof AttributeSetClass;
/**
 * Class javax.swing.text.AttributeSet.
 *
 * This actually imports the java class for further use.
 * The class {@link AttributeSetClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AttributeSet extends AttributeSet_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default AttributeSet;
//# sourceMappingURL=AttributeSet.d.ts.map