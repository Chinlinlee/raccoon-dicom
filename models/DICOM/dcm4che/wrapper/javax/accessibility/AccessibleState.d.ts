import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Locale as java_util_Locale } from "./../../java/util/Locale";
import { Long as java_lang_Long } from "./../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../java/lang/Class";
/**
 * This class just defines types, you should import {@link AccessibleState} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AccessibleStateClass extends JavaClass {
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly ACTIVE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly PRESSED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly ARMED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly BUSY: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly CHECKED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly EDITABLE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly EXPANDABLE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly COLLAPSED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly EXPANDED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly ENABLED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly FOCUSABLE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly FOCUSED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly ICONIFIED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly MODAL: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly OPAQUE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly RESIZABLE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly MULTISELECTABLE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly SELECTABLE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly SELECTED: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly SHOWING: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly VISIBLE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly VERTICAL: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly HORIZONTAL: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly SINGLE_LINE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly MULTI_LINE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly TRANSIENT: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly MANAGES_DESCENDANTS: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly INDETERMINATE: AccessibleStateClass | null;
    /**
     * Original type: 'javax.accessibility.AccessibleState'
     */
    static readonly TRUNCATED: AccessibleStateClass | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'java.lang.String'
     */
    toDisplayString(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toDisplayStringSync(): string | null;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    toDisplayString(var0: java_util_Locale | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    toDisplayStringSync(var0: java_util_Locale | null): string | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const AccessibleState_base: typeof AccessibleStateClass;
/**
 * Class javax.accessibility.AccessibleState.
 *
 * This actually imports the java class for further use.
 * The class {@link AccessibleStateClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AccessibleState extends AccessibleState_base {
}
export default AccessibleState;
//# sourceMappingURL=AccessibleState.d.ts.map