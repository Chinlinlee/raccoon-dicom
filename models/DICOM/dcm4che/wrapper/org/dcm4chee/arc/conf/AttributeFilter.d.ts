import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Attributes$UpdatePolicy as org_dcm4che3_data_Attributes$UpdatePolicy } from "./../../../dcm4che3/data/Attributes$UpdatePolicy";
import { ValueSelector as org_dcm4che3_data_ValueSelector } from "./../../../dcm4che3/data/ValueSelector";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Boolean as java_lang_Boolean } from "./../../../../java/lang/Boolean";
import { Attributes as org_dcm4che3_data_Attributes } from "./../../../dcm4che3/data/Attributes";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link AttributeFilter} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AttributeFilterClass extends JavaClass {
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes$UpdatePolicy'
     * @return original return type: 'void'
     */
    setAttributeUpdatePolicy(var0: org_dcm4che3_data_Attributes$UpdatePolicy | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes$UpdatePolicy'
     * @return original return type: 'void'
     */
    setAttributeUpdatePolicySync(var0: org_dcm4che3_data_Attributes$UpdatePolicy | null): void;
    /**
     * @return original return type: 'org.dcm4che3.data.ValueSelector'
     */
    getCustomAttribute1(): Promise<org_dcm4che3_data_ValueSelector | null>;
    /**
     * @return original return type: 'org.dcm4che3.data.ValueSelector'
     */
    getCustomAttribute1Sync(): org_dcm4che3_data_ValueSelector | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValueSelector'
     * @return original return type: 'void'
     */
    setCustomAttribute2(var0: org_dcm4che3_data_ValueSelector | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValueSelector'
     * @return original return type: 'void'
     */
    setCustomAttribute2Sync(var0: org_dcm4che3_data_ValueSelector | null): void;
    /**
     * @return original return type: 'org.dcm4che3.data.Attributes$UpdatePolicy'
     */
    getAttributeUpdatePolicy(): Promise<org_dcm4che3_data_Attributes$UpdatePolicy | null>;
    /**
     * @return original return type: 'org.dcm4che3.data.Attributes$UpdatePolicy'
     */
    getAttributeUpdatePolicySync(): org_dcm4che3_data_Attributes$UpdatePolicy | null;
    /**
     * @return original return type: 'org.dcm4che3.data.ValueSelector'
     */
    getCustomAttribute2(): Promise<org_dcm4che3_data_ValueSelector | null>;
    /**
     * @return original return type: 'org.dcm4che3.data.ValueSelector'
     */
    getCustomAttribute2Sync(): org_dcm4che3_data_ValueSelector | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValueSelector'
     * @return original return type: 'void'
     */
    setCustomAttribute3(var0: org_dcm4che3_data_ValueSelector | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValueSelector'
     * @return original return type: 'void'
     */
    setCustomAttribute3Sync(var0: org_dcm4che3_data_ValueSelector | null): void;
    /**
     * @return original return type: 'org.dcm4che3.data.ValueSelector'
     */
    getCustomAttribute3(): Promise<org_dcm4che3_data_ValueSelector | null>;
    /**
     * @return original return type: 'org.dcm4che3.data.ValueSelector'
     */
    getCustomAttribute3Sync(): org_dcm4che3_data_ValueSelector | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValueSelector'
     * @return original return type: 'void'
     */
    setCustomAttribute1(var0: org_dcm4che3_data_ValueSelector | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValueSelector'
     * @return original return type: 'void'
     */
    setCustomAttribute1Sync(var0: org_dcm4che3_data_ValueSelector | null): void;
    /**
     * @param var0 original type: 'int[]'
     * @return original return type: 'void'
     */
    setSelection(var0: (java_lang_Integer | number)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'int[]'
     * @return original return type: 'void'
     */
    setSelectionSync(var0: (java_lang_Integer | number)[] | null): void;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int[]'
     */
    getSelection(var0: java_lang_Boolean | boolean): Promise<(number)[] | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int[]'
     */
    getSelectionSync(var0: java_lang_Boolean | boolean): (number)[] | null;
    /**
     * @return original return type: 'int[]'
     */
    getSelection(): Promise<(number)[] | null>;
    /**
     * @return original return type: 'int[]'
     */
    getSelectionSync(): (number)[] | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'org.dcm4che3.data.ValueSelector'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static selectStringValue(var0: org_dcm4che3_data_Attributes | null, var1: org_dcm4che3_data_ValueSelector | null, var2: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'org.dcm4che3.data.ValueSelector'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static selectStringValueSync(var0: org_dcm4che3_data_Attributes | null, var1: org_dcm4che3_data_ValueSelector | null, var2: string | null): string | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.dcm4chee.arc.conf.AttributeFilter'
     */
    static newInstanceAsync(): Promise<AttributeFilter>;
    /**
     * @param var0 original type: 'int[]'
     * @return original return type: 'org.dcm4chee.arc.conf.AttributeFilter'
     */
    static newInstanceAsync(var0: (java_lang_Integer | number)[] | null): Promise<AttributeFilter>;
    constructor();
    /**
     * @param var0 original type: 'int[]'
     */
    constructor(var0: (java_lang_Integer | number)[] | null);
}
declare const AttributeFilter_base: typeof AttributeFilterClass;
/**
 * Class org.dcm4chee.arc.conf.AttributeFilter.
 *
 * This actually imports the java class for further use.
 * The class {@link AttributeFilterClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AttributeFilter extends AttributeFilter_base {
}
export default AttributeFilter;
//# sourceMappingURL=AttributeFilter.d.ts.map