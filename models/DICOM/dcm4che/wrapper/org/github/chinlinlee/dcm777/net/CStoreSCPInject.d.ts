import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Association as org_dcm4che3_net_Association } from "./../../../../dcm4che3/net/Association";
import { PresentationContext as org_dcm4che3_net_pdu_PresentationContext } from "./../../../../dcm4che3/net/pdu/PresentationContext";
import { Attributes as org_dcm4che3_data_Attributes } from "./../../../../dcm4che3/data/Attributes";
import { InputStream as java_io_InputStream } from "./../../../../../java/io/InputStream";
import { File as java_io_File } from "./../../../../../java/io/File";
import { Dimse as org_dcm4che3_net_Dimse } from "./../../../../dcm4che3/net/Dimse";
import { PDVInputStream as org_dcm4che3_net_PDVInputStream } from "./../../../../dcm4che3/net/PDVInputStream";
/**
 * This class just defines types, you should import {@link CStoreSCPInject} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CStoreSCPInjectClass extends JavaClass {
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.data.Attributes'
     * @param var3 original type: 'java.io.InputStream'
     * @param var4 original type: 'org.dcm4che3.data.Attributes'
     * @param var5 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    postStore(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_data_Attributes | null, var3: java_io_InputStream | null, var4: org_dcm4che3_data_Attributes | null, var5: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.data.Attributes'
     * @param var3 original type: 'java.io.InputStream'
     * @param var4 original type: 'org.dcm4che3.data.Attributes'
     * @param var5 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    postStoreSync(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_data_Attributes | null, var3: java_io_InputStream | null, var4: org_dcm4che3_data_Attributes | null, var5: java_io_File | null): void;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.net.Dimse'
     * @param var3 original type: 'org.dcm4che3.data.Attributes'
     * @param var4 original type: 'org.dcm4che3.net.PDVInputStream'
     * @param var5 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'void'
     */
    postDimseRQ(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_net_Dimse | null, var3: org_dcm4che3_data_Attributes | null, var4: org_dcm4che3_net_PDVInputStream | null, var5: org_dcm4che3_data_Attributes | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.net.Dimse'
     * @param var3 original type: 'org.dcm4che3.data.Attributes'
     * @param var4 original type: 'org.dcm4che3.net.PDVInputStream'
     * @param var5 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'void'
     */
    postDimseRQSync(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_net_Dimse | null, var3: org_dcm4che3_data_Attributes | null, var4: org_dcm4che3_net_PDVInputStream | null, var5: org_dcm4che3_data_Attributes | null): void;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createCStoreSCPInjectProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface CStoreSCPInjectInterface {
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.data.Attributes'
     * @param var3 original type: 'java.io.InputStream'
     * @param var4 original type: 'org.dcm4che3.data.Attributes'
     * @param var5 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    postStore(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_data_Attributes | null, var3: java_io_InputStream | null, var4: org_dcm4che3_data_Attributes | null, var5: java_io_File | null): void;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.net.Dimse'
     * @param var3 original type: 'org.dcm4che3.data.Attributes'
     * @param var4 original type: 'org.dcm4che3.net.PDVInputStream'
     * @param var5 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'void'
     */
    postDimseRQ(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_net_Dimse | null, var3: org_dcm4che3_data_Attributes | null, var4: org_dcm4che3_net_PDVInputStream | null, var5: org_dcm4che3_data_Attributes | null): void;
}
/**
 * Create a proxy for the {@link CStoreSCPInject} interface.
 * All required methods in {@link CStoreSCPInjectInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createCStoreSCPInjectProxy(methods: CStoreSCPInjectInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<CStoreSCPInjectInterface>;
declare const CStoreSCPInject_base: typeof CStoreSCPInjectClass;
/**
 * Class org.github.chinlinlee.dcm777.net.CStoreSCPInject.
 *
 * This actually imports the java class for further use.
 * The class {@link CStoreSCPInjectClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CStoreSCPInject extends CStoreSCPInject_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default CStoreSCPInject;
//# sourceMappingURL=CStoreSCPInject.d.ts.map