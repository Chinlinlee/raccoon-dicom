import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { RetrieveTask as org_dcm4che3_net_service_RetrieveTask } from "./../../../../dcm4che3/net/service/RetrieveTask";
import { Association as org_dcm4che3_net_Association } from "./../../../../dcm4che3/net/Association";
import { PresentationContext as org_dcm4che3_net_pdu_PresentationContext } from "./../../../../dcm4che3/net/pdu/PresentationContext";
import { Attributes as org_dcm4che3_data_Attributes } from "./../../../../dcm4che3/data/Attributes";
/**
 * This class just defines types, you should import {@link CMoveSCPInject} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CMoveSCPInjectClass extends JavaClass {
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.data.Attributes'
     * @param var3 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.dcm4che3.net.service.RetrieveTask'
     */
    calculateMatches(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_data_Attributes | null, var3: org_dcm4che3_data_Attributes | null): Promise<org_dcm4che3_net_service_RetrieveTask | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.data.Attributes'
     * @param var3 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.dcm4che3.net.service.RetrieveTask'
     */
    calculateMatchesSync(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_data_Attributes | null, var3: org_dcm4che3_data_Attributes | null): org_dcm4che3_net_service_RetrieveTask | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createCMoveSCPInjectProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface CMoveSCPInjectInterface {
    /**
     * @param var0 original type: 'org.dcm4che3.net.Association'
     * @param var1 original type: 'org.dcm4che3.net.pdu.PresentationContext'
     * @param var2 original type: 'org.dcm4che3.data.Attributes'
     * @param var3 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.dcm4che3.net.service.RetrieveTask'
     */
    calculateMatches(var0: org_dcm4che3_net_Association | null, var1: org_dcm4che3_net_pdu_PresentationContext | null, var2: org_dcm4che3_data_Attributes | null, var3: org_dcm4che3_data_Attributes | null): org_dcm4che3_net_service_RetrieveTask | null;
}
/**
 * Create a proxy for the {@link CMoveSCPInject} interface.
 * All required methods in {@link CMoveSCPInjectInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createCMoveSCPInjectProxy(methods: CMoveSCPInjectInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<CMoveSCPInjectInterface>;
declare const CMoveSCPInject_base: typeof CMoveSCPInjectClass;
/**
 * Class org.github.chinlinlee.dcm777.net.CMoveSCPInject.
 *
 * This actually imports the java class for further use.
 * The class {@link CMoveSCPInjectClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CMoveSCPInject extends CMoveSCPInject_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default CMoveSCPInject;
//# sourceMappingURL=CMoveSCPInject.d.ts.map