import { JavaClass, BasicOrJavaType } from "java-bridge";
import { ActiveParticipant as org_dcm4che3_audit_ActiveParticipant } from "./ActiveParticipant";
import { AuditMessages$UserIDTypeCode as org_dcm4che3_audit_AuditMessages$UserIDTypeCode } from "./AuditMessages$UserIDTypeCode";
import { AuditMessages$MediaType as org_dcm4che3_audit_AuditMessages$MediaType } from "./AuditMessages$MediaType";
import { AuditMessages$RoleIDCode as org_dcm4che3_audit_AuditMessages$RoleIDCode } from "./AuditMessages$RoleIDCode";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link ActiveParticipantBuilder} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ActiveParticipantBuilderClass extends JavaClass {
    /**
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipant'
     */
    build(): Promise<org_dcm4che3_audit_ActiveParticipant | null>;
    /**
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipant'
     */
    buildSync(): org_dcm4che3_audit_ActiveParticipant | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    userName(var0: string | null): Promise<ActiveParticipantBuilder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    userNameSync(var0: string | null): ActiveParticipantBuilder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    altUserID(var0: string | null): Promise<ActiveParticipantBuilder | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    altUserIDSync(var0: string | null): ActiveParticipantBuilder | null;
    /**
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    isRequester(): Promise<ActiveParticipantBuilder | null>;
    /**
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    isRequesterSync(): ActiveParticipantBuilder | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessages$UserIDTypeCode'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    userIDTypeCode(var0: org_dcm4che3_audit_AuditMessages$UserIDTypeCode | null): Promise<ActiveParticipantBuilder | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessages$UserIDTypeCode'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    userIDTypeCodeSync(var0: org_dcm4che3_audit_AuditMessages$UserIDTypeCode | null): ActiveParticipantBuilder | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessages$MediaType'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    mediaType(var0: org_dcm4che3_audit_AuditMessages$MediaType | null): Promise<ActiveParticipantBuilder | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessages$MediaType'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    mediaTypeSync(var0: org_dcm4che3_audit_AuditMessages$MediaType | null): ActiveParticipantBuilder | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessages$RoleIDCode[]'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    roleIDCode(var0: (org_dcm4che3_audit_AuditMessages$RoleIDCode | null)[] | null): Promise<ActiveParticipantBuilder | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessages$RoleIDCode[]'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    roleIDCodeSync(var0: (org_dcm4che3_audit_AuditMessages$RoleIDCode | null)[] | null): ActiveParticipantBuilder | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipantBuilder'
     */
    static newInstanceAsync(var0: string | null, var1: string | null): Promise<ActiveParticipantBuilder>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     */
    constructor(var0: string | null, var1: string | null);
}
declare const ActiveParticipantBuilder_base: typeof ActiveParticipantBuilderClass;
/**
 * Class org.dcm4che3.audit.ActiveParticipantBuilder.
 *
 * This actually imports the java class for further use.
 * The class {@link ActiveParticipantBuilderClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ActiveParticipantBuilder extends ActiveParticipantBuilder_base {
}
export default ActiveParticipantBuilder;
//# sourceMappingURL=ActiveParticipantBuilder.d.ts.map