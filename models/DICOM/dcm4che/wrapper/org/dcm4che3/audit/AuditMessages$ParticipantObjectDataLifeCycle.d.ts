import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link AuditMessages$ParticipantObjectDataLifeCycle} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AuditMessages$ParticipantObjectDataLifeCycleClass extends JavaClass {
    /**
     * Original type: 'java.lang.String'
     */
    static readonly OriginationCreation: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly ImportCopyFromOriginal: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly Amendment: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly Verification: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly Translation: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly AccessUse: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly DeIdentification: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly AggregationSummarizationDerivation: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly Report: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly ExportCopyToTarget: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly Disclosure: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly ReceiptOfDisclosure: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly Archiving: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly LogicalDeletion: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly PermanentErasurePhysicalDestruction: string | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.dcm4che3.audit.AuditMessages$ParticipantObjectDataLifeCycle'
     */
    static newInstanceAsync(): Promise<AuditMessages$ParticipantObjectDataLifeCycle>;
    constructor();
}
declare const AuditMessages$ParticipantObjectDataLifeCycle_base: typeof AuditMessages$ParticipantObjectDataLifeCycleClass;
/**
 * Class org.dcm4che3.audit.AuditMessages$ParticipantObjectDataLifeCycle.
 *
 * This actually imports the java class for further use.
 * The class {@link AuditMessages$ParticipantObjectDataLifeCycleClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AuditMessages$ParticipantObjectDataLifeCycle extends AuditMessages$ParticipantObjectDataLifeCycle_base {
}
export default AuditMessages$ParticipantObjectDataLifeCycle;
//# sourceMappingURL=AuditMessages$ParticipantObjectDataLifeCycle.d.ts.map