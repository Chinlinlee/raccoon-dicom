import { JavaClass, BasicOrJavaType } from "java-bridge";
import { UserIDTypeCode as org_dcm4che3_audit_UserIDTypeCode } from "./UserIDTypeCode";
import { MediaType as org_dcm4che3_audit_MediaType } from "./MediaType";
import { List as java_util_List } from "./../../../java/util/List";
import { Boolean as java_lang_Boolean } from "./../../../java/lang/Boolean";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link ActiveParticipant} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ActiveParticipantClass extends JavaClass {
    /**
     * @param var0 original type: 'org.dcm4che3.audit.UserIDTypeCode'
     * @return original return type: 'void'
     */
    setUserIDTypeCode(var0: org_dcm4che3_audit_UserIDTypeCode | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.UserIDTypeCode'
     * @return original return type: 'void'
     */
    setUserIDTypeCodeSync(var0: org_dcm4che3_audit_UserIDTypeCode | null): void;
    /**
     * @return original return type: 'org.dcm4che3.audit.UserIDTypeCode'
     */
    getUserIDTypeCode(): Promise<org_dcm4che3_audit_UserIDTypeCode | null>;
    /**
     * @return original return type: 'org.dcm4che3.audit.UserIDTypeCode'
     */
    getUserIDTypeCodeSync(): org_dcm4che3_audit_UserIDTypeCode | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.MediaType'
     * @return original return type: 'void'
     */
    setMediaType(var0: org_dcm4che3_audit_MediaType | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.MediaType'
     * @return original return type: 'void'
     */
    setMediaTypeSync(var0: org_dcm4che3_audit_MediaType | null): void;
    /**
     * @return original return type: 'java.util.List'
     */
    getRoleIDCode(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getRoleIDCodeSync(): java_util_List | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUserID(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUserIDSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUserID(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUserIDSync(var0: string | null): void;
    /**
     * @return original return type: 'org.dcm4che3.audit.MediaType'
     */
    getMediaType(): Promise<org_dcm4che3_audit_MediaType | null>;
    /**
     * @return original return type: 'org.dcm4che3.audit.MediaType'
     */
    getMediaTypeSync(): org_dcm4che3_audit_MediaType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUserTypeCode(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUserTypeCodeSync(var0: string | null): void;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setUserIsRequestor(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setUserIsRequestorSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUserName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUserNameSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    isUserIsRequestor(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isUserIsRequestorSync(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUserTypeCode(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUserTypeCodeSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUserName(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUserNameSync(var0: string | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setAlternativeUserID(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setAlternativeUserIDSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAlternativeUserID(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAlternativeUserIDSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNetworkAccessPointID(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNetworkAccessPointIDSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setNetworkAccessPointID(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setNetworkAccessPointIDSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNetworkAccessPointTypeCode(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNetworkAccessPointTypeCodeSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setNetworkAccessPointTypeCode(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setNetworkAccessPointTypeCodeSync(var0: string | null): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.dcm4che3.audit.ActiveParticipant'
     */
    static newInstanceAsync(): Promise<ActiveParticipant>;
    constructor();
}
declare const ActiveParticipant_base: typeof ActiveParticipantClass;
/**
 * Class org.dcm4che3.audit.ActiveParticipant.
 *
 * This actually imports the java class for further use.
 * The class {@link ActiveParticipantClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ActiveParticipant extends ActiveParticipant_base {
}
export default ActiveParticipant;
//# sourceMappingURL=ActiveParticipant.d.ts.map