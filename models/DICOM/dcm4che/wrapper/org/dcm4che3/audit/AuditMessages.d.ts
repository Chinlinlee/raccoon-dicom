import { JavaClass, BasicOrJavaType } from "java-bridge";
import { ParticipantObjectDetail as org_dcm4che3_audit_ParticipantObjectDetail } from "./ParticipantObjectDetail";
import { AuditSourceIdentification as org_dcm4che3_audit_AuditSourceIdentification } from "./AuditSourceIdentification";
import { AuditMessages$AuditSourceTypeCode as org_dcm4che3_audit_AuditMessages$AuditSourceTypeCode } from "./AuditMessages$AuditSourceTypeCode";
import { AuditMessages$UserIDTypeCode as org_dcm4che3_audit_AuditMessages$UserIDTypeCode } from "./AuditMessages$UserIDTypeCode";
import { SOPClass as org_dcm4che3_audit_SOPClass } from "./SOPClass";
import { HashSet as java_util_HashSet } from "./../../../java/util/HashSet";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { AuditMessage as org_dcm4che3_audit_AuditMessage } from "./AuditMessage";
import { Boolean as java_lang_Boolean } from "./../../../java/lang/Boolean";
import { OutputStream as java_io_OutputStream } from "./../../../java/io/OutputStream";
import { Reader as java_io_Reader } from "./../../../java/io/Reader";
import { InputStream as java_io_InputStream } from "./../../../java/io/InputStream";
import { EventIdentification as org_dcm4che3_audit_EventIdentification } from "./EventIdentification";
import { ActiveParticipant as org_dcm4che3_audit_ActiveParticipant } from "./ActiveParticipant";
import { ParticipantObjectIdentification as org_dcm4che3_audit_ParticipantObjectIdentification } from "./ParticipantObjectIdentification";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link AuditMessages} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AuditMessagesClass extends JavaClass {
    /**
     * Original type: 'java.lang.String'
     */
    static readonly SCHEMA_URI: string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static isIP(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static isIPSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'java.lang.String'
     */
    static alternativeUserIDForAETitle(var0: (string | null)[] | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'java.lang.String'
     */
    static alternativeUserIDForAETitleSync(var0: (string | null)[] | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.ParticipantObjectDetail'
     */
    static createParticipantObjectDetail(var0: string | null, var1: string | null): Promise<org_dcm4che3_audit_ParticipantObjectDetail | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.ParticipantObjectDetail'
     */
    static createParticipantObjectDetailSync(var0: string | null, var1: string | null): org_dcm4che3_audit_ParticipantObjectDetail | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'org.dcm4che3.audit.AuditMessages$AuditSourceTypeCode[]'
     * @return original return type: 'org.dcm4che3.audit.AuditSourceIdentification'
     */
    static createAuditSourceIdentification(var0: string | null, var1: string | null, var2: (org_dcm4che3_audit_AuditMessages$AuditSourceTypeCode | null)[] | null): Promise<org_dcm4che3_audit_AuditSourceIdentification | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'org.dcm4che3.audit.AuditMessages$AuditSourceTypeCode[]'
     * @return original return type: 'org.dcm4che3.audit.AuditSourceIdentification'
     */
    static createAuditSourceIdentificationSync(var0: string | null, var1: string | null, var2: (org_dcm4che3_audit_AuditMessages$AuditSourceTypeCode | null)[] | null): org_dcm4che3_audit_AuditSourceIdentification | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.AuditMessages$UserIDTypeCode'
     */
    static userIDTypeCode(var0: string | null): Promise<org_dcm4che3_audit_AuditMessages$UserIDTypeCode | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.audit.AuditMessages$UserIDTypeCode'
     */
    static userIDTypeCodeSync(var0: string | null): org_dcm4che3_audit_AuditMessages$UserIDTypeCode | null;
    /**
     * @param var0 original type: 'java.util.HashSet'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.Integer'
     * @return original return type: 'org.dcm4che3.audit.SOPClass'
     */
    static createSOPClass(var0: java_util_HashSet | null, var1: string | null, var2: java_lang_Integer | number | null): Promise<org_dcm4che3_audit_SOPClass | null>;
    /**
     * @param var0 original type: 'java.util.HashSet'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.Integer'
     * @return original return type: 'org.dcm4che3.audit.SOPClass'
     */
    static createSOPClassSync(var0: java_util_HashSet | null, var1: string | null, var2: java_lang_Integer | number | null): org_dcm4che3_audit_SOPClass | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_lang_Boolean | boolean, var2: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_lang_Boolean | boolean, var2: string | null): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @return original return type: 'java.lang.String'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @return original return type: 'java.lang.String'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'boolean'
     * @return original return type: 'java.lang.String'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_lang_Boolean | boolean): Promise<string | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'boolean'
     * @return original return type: 'java.lang.String'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_lang_Boolean | boolean): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_lang_Boolean | boolean, var2: string | null, var3: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_lang_Boolean | boolean, var2: string | null, var3: string | null): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null): void;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null, var2: java_lang_Boolean | boolean, var3: string | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null, var2: java_lang_Boolean | boolean, var3: string | null): void;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static toXML(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null, var2: java_lang_Boolean | boolean, var3: string | null, var4: string | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.AuditMessage'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static toXMLSync(var0: org_dcm4che3_audit_AuditMessage | null, var1: java_io_OutputStream | null, var2: java_lang_Boolean | boolean, var3: string | null, var4: string | null): void;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'org.dcm4che3.audit.AuditMessage'
     */
    static fromXML(var0: java_io_Reader | null): Promise<org_dcm4che3_audit_AuditMessage | null>;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'org.dcm4che3.audit.AuditMessage'
     */
    static fromXMLSync(var0: java_io_Reader | null): org_dcm4che3_audit_AuditMessage | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'org.dcm4che3.audit.AuditMessage'
     */
    static fromXML(var0: java_io_InputStream | null): Promise<org_dcm4che3_audit_AuditMessage | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'org.dcm4che3.audit.AuditMessage'
     */
    static fromXMLSync(var0: java_io_InputStream | null): org_dcm4che3_audit_AuditMessage | null;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.EventIdentification'
     * @param var1 original type: 'org.dcm4che3.audit.ActiveParticipant[]'
     * @param var2 original type: 'org.dcm4che3.audit.ParticipantObjectIdentification[]'
     * @return original return type: 'org.dcm4che3.audit.AuditMessage'
     */
    static createMessage(var0: org_dcm4che3_audit_EventIdentification | null, var1: (org_dcm4che3_audit_ActiveParticipant | null)[] | null, var2: (org_dcm4che3_audit_ParticipantObjectIdentification | null)[] | null): Promise<org_dcm4che3_audit_AuditMessage | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.audit.EventIdentification'
     * @param var1 original type: 'org.dcm4che3.audit.ActiveParticipant[]'
     * @param var2 original type: 'org.dcm4che3.audit.ParticipantObjectIdentification[]'
     * @return original return type: 'org.dcm4che3.audit.AuditMessage'
     */
    static createMessageSync(var0: org_dcm4che3_audit_EventIdentification | null, var1: (org_dcm4che3_audit_ActiveParticipant | null)[] | null, var2: (org_dcm4che3_audit_ParticipantObjectIdentification | null)[] | null): org_dcm4che3_audit_AuditMessage | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.dcm4che3.audit.AuditMessages'
     */
    static newInstanceAsync(): Promise<AuditMessages>;
    constructor();
}
declare const AuditMessages_base: typeof AuditMessagesClass;
/**
 * Class org.dcm4che3.audit.AuditMessages.
 *
 * This actually imports the java class for further use.
 * The class {@link AuditMessagesClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AuditMessages extends AuditMessages_base {
}
export default AuditMessages;
//# sourceMappingURL=AuditMessages.d.ts.map