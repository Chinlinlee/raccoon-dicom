import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { BulkData as org_dcm4che3_data_BulkData } from "./../data/BulkData";
import { DicomInputStream as org_dcm4che3_io_DicomInputStream } from "./DicomInputStream";
/**
 * This class just defines types, you should import {@link BulkDataCreator} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class BulkDataCreatorClass extends JavaClass {
    /**
     * @param var0 original type: 'org.dcm4che3.io.DicomInputStream'
     * @return original return type: 'org.dcm4che3.data.BulkData'
     */
    createBulkData(var0: org_dcm4che3_io_DicomInputStream | null): Promise<org_dcm4che3_data_BulkData | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.io.DicomInputStream'
     * @return original return type: 'org.dcm4che3.data.BulkData'
     */
    createBulkDataSync(var0: org_dcm4che3_io_DicomInputStream | null): org_dcm4che3_data_BulkData | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createBulkDataCreatorProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface BulkDataCreatorInterface {
    /**
     * @param var0 original type: 'org.dcm4che3.io.DicomInputStream'
     * @return original return type: 'org.dcm4che3.data.BulkData'
     */
    createBulkData(var0: org_dcm4che3_io_DicomInputStream | null): org_dcm4che3_data_BulkData | null;
}
/**
 * Create a proxy for the {@link BulkDataCreator} interface.
 * All required methods in {@link BulkDataCreatorInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createBulkDataCreatorProxy(methods: BulkDataCreatorInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<BulkDataCreatorInterface>;
declare const BulkDataCreator_base: typeof BulkDataCreatorClass;
/**
 * Class org.dcm4che3.io.BulkDataCreator.
 *
 * This actually imports the java class for further use.
 * The class {@link BulkDataCreatorClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class BulkDataCreator extends BulkDataCreator_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default BulkDataCreator;
//# sourceMappingURL=BulkDataCreator.d.ts.map