import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link Status} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class StatusClass extends JavaClass {
    /**
     * Original type: 'int'
     */
    static readonly Success: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly Pending: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly PendingWarning: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly Cancel: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NoSuchAttribute: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly InvalidAttributeValue: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly AttributeListError: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ProcessingFailure: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DuplicateSOPinstance: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NoSuchObjectInstance: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NoSuchEventType: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NoSuchArgument: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly InvalidArgumentValue: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly AttributeValueOutOfRange: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly InvalidObjectInstance: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NoSuchSOPclass: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ClassInstanceConflict: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly MissingAttribute: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly MissingAttributeValue: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly SOPclassNotSupported: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NoSuchActionType: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly NotAuthorized: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DuplicateInvocation: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UnrecognizedOperation: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly MistypedArgument: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ResourceLimitation: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly OutOfResources: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UnableToCalculateNumberOfMatches: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UnableToPerformSubOperations: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly MoveDestinationUnknown: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IdentifierDoesNotMatchSOPClass: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DataSetDoesNotMatchSOPClassError: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly OneOrMoreFailures: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CoercionOfDataElements: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ElementsDiscarded: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DataSetDoesNotMatchSOPClassWarning: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UnableToProcess: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CannotUnderstand: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSCreatedWithModifications: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSDeletionLockNotGranted: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSAlreadyInRequestedStateOfCanceled: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSCoercedInvalidValuesToValidValues: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSAlreadyInRequestedStateOfCompleted: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSMayNoLongerBeUpdated: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSTransactionUIDNotCorrect: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSAlreadyInProgress: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSStateMayNotChangedToScheduled: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSNotMetFinalStateRequirements: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSDoesNotExist: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSUnknownReceivingAET: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSNotScheduled: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSNotYetInProgress: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSAlreadyCompleted: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSPerformerCannotBeContacted: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSPerformerChoosesNotToCancel: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSActionNotAppropriate: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly UPSDoesNotSupportEventReports: java_lang_Integer | number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    static isPending(var0: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    static isPendingSync(var0: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.dcm4che3.net.Status'
     */
    static newInstanceAsync(): Promise<Status>;
    constructor();
}
declare const Status_base: typeof StatusClass;
/**
 * Class org.dcm4che3.net.Status.
 *
 * This actually imports the java class for further use.
 * The class {@link StatusClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Status extends Status_base {
}
export default Status;
//# sourceMappingURL=Status.d.ts.map