import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Map as java_util_Map } from "./../../../java/util/Map";
import { Boolean as java_lang_Boolean } from "./../../../java/lang/Boolean";
import { Device as org_dcm4che3_net_Device } from "./Device";
import { Connection as org_dcm4che3_net_Connection } from "./Connection";
import { List as java_util_List } from "./../../../java/util/List";
import { KeycloakClient as org_dcm4che3_net_KeycloakClient } from "./KeycloakClient";
import { WebApplication$ServiceClass as org_dcm4che3_net_WebApplication$ServiceClass } from "./WebApplication$ServiceClass";
import { StringBuilder as java_lang_StringBuilder } from "./../../../java/lang/StringBuilder";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link WebApplication} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class WebApplicationClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getProperty(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getPropertySync(var0: string | null, var1: string | null): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setProperty(var0: string | null, var1: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setPropertySync(var0: string | null, var1: string | null): void;
    /**
     * @return original return type: 'java.util.Map'
     */
    getProperties(): Promise<java_util_Map | null>;
    /**
     * @return original return type: 'java.util.Map'
     */
    getPropertiesSync(): java_util_Map | null;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    setProperties(var0: (string | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    setPropertiesSync(var0: (string | null)[] | null): void;
    /**
     * @return original return type: 'boolean'
     */
    isInstalled(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isInstalledSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.Boolean'
     * @return original return type: 'void'
     */
    setInstalled(var0: java_lang_Boolean | boolean | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Boolean'
     * @return original return type: 'void'
     */
    setInstalledSync(var0: java_lang_Boolean | boolean | null): void;
    /**
     * @return original return type: 'java.lang.Boolean'
     */
    getInstalled(): Promise<boolean | null>;
    /**
     * @return original return type: 'java.lang.Boolean'
     */
    getInstalledSync(): boolean | null;
    /**
     * @return original return type: 'org.dcm4che3.net.Device'
     */
    getDevice(): Promise<org_dcm4che3_net_Device | null>;
    /**
     * @return original return type: 'org.dcm4che3.net.Device'
     */
    getDeviceSync(): org_dcm4che3_net_Device | null;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    setApplicationClusters(var0: (string | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    setApplicationClustersSync(var0: (string | null)[] | null): void;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getApplicationClusters(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getApplicationClustersSync(): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setDescription(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setDescriptionSync(var0: string | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setAETitle(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setAETitleSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getDescription(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getDescriptionSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAETitle(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAETitleSync(): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Connection'
     * @return original return type: 'boolean'
     */
    removeConnection(var0: org_dcm4che3_net_Connection | null): Promise<boolean>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Connection'
     * @return original return type: 'boolean'
     */
    removeConnectionSync(var0: org_dcm4che3_net_Connection | null): boolean;
    /**
     * @return original return type: 'java.util.List'
     */
    getConnections(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getConnectionsSync(): java_util_List | null;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Connection'
     * @return original return type: 'void'
     */
    addConnection(var0: org_dcm4che3_net_Connection | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Connection'
     * @return original return type: 'void'
     */
    addConnectionSync(var0: org_dcm4che3_net_Connection | null): void;
    /**
     * @return original return type: 'org.dcm4che3.net.KeycloakClient'
     */
    getKeycloakClient(): Promise<org_dcm4che3_net_KeycloakClient | null>;
    /**
     * @return original return type: 'org.dcm4che3.net.KeycloakClient'
     */
    getKeycloakClientSync(): org_dcm4che3_net_KeycloakClient | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getApplicationName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getApplicationNameSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getKeycloakClientID(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getKeycloakClientIDSync(): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.net.WebApplication$ServiceClass'
     * @return original return type: 'boolean'
     */
    containsServiceClass(var0: org_dcm4che3_net_WebApplication$ServiceClass | null): Promise<boolean>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.WebApplication$ServiceClass'
     * @return original return type: 'boolean'
     */
    containsServiceClassSync(var0: org_dcm4che3_net_WebApplication$ServiceClass | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setKeycloakClientID(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setKeycloakClientIDSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServicePath(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServicePathSync(): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Connection'
     * @return original return type: 'java.lang.StringBuilder'
     */
    getServiceURL(var0: org_dcm4che3_net_Connection | null): Promise<java_lang_StringBuilder | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.Connection'
     * @return original return type: 'java.lang.StringBuilder'
     */
    getServiceURLSync(var0: org_dcm4che3_net_Connection | null): java_lang_StringBuilder | null;
    /**
     * @return original return type: 'java.lang.StringBuilder'
     */
    getServiceURL(): Promise<java_lang_StringBuilder | null>;
    /**
     * @return original return type: 'java.lang.StringBuilder'
     */
    getServiceURLSync(): java_lang_StringBuilder | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setServicePath(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setServicePathSync(var0: string | null): void;
    /**
     * @return original return type: 'org.dcm4che3.net.WebApplication$ServiceClass[]'
     */
    getServiceClasses(): Promise<(org_dcm4che3_net_WebApplication$ServiceClass | null)[] | null>;
    /**
     * @return original return type: 'org.dcm4che3.net.WebApplication$ServiceClass[]'
     */
    getServiceClassesSync(): (org_dcm4che3_net_WebApplication$ServiceClass | null)[] | null;
    /**
     * @param var0 original type: 'org.dcm4che3.net.WebApplication$ServiceClass[]'
     * @return original return type: 'void'
     */
    setServiceClasses(var0: (org_dcm4che3_net_WebApplication$ServiceClass | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.net.WebApplication$ServiceClass[]'
     * @return original return type: 'void'
     */
    setServiceClassesSync(var0: (org_dcm4che3_net_WebApplication$ServiceClass | null)[] | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setApplicationName(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setApplicationNameSync(var0: string | null): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.dcm4che3.net.WebApplication'
     */
    static newInstanceAsync(): Promise<WebApplication>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.net.WebApplication'
     */
    static newInstanceAsync(var0: string | null): Promise<WebApplication>;
    constructor();
    /**
     * @param var0 original type: 'java.lang.String'
     */
    constructor(var0: string | null);
}
declare const WebApplication_base: typeof WebApplicationClass;
/**
 * Class org.dcm4che3.net.WebApplication.
 *
 * This actually imports the java class for further use.
 * The class {@link WebApplicationClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class WebApplication extends WebApplication_base {
}
export default WebApplication;
//# sourceMappingURL=WebApplication.d.ts.map