import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../java/util/List";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { ItemPointer as org_dcm4che3_data_ItemPointer } from "./ItemPointer";
import { Attributes as org_dcm4che3_data_Attributes } from "./Attributes";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link AttributeSelector} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AttributeSelectorClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.data.AttributeSelector'
     */
    static valueOf(var0: string | null): Promise<AttributeSelector | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.data.AttributeSelector'
     */
    static valueOfSync(var0: string | null): AttributeSelector | null;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    matches(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: string | null, var2: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    matchesSync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: string | null, var2: java_lang_Integer | number): boolean;
    /**
     * @return original return type: 'int'
     */
    tag(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    tagSync(): number;
    /**
     * @return original return type: 'int'
     */
    level(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    levelSync(): number;
    /**
     * @return original return type: 'java.lang.String'
     */
    privateCreator(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    privateCreatorSync(): string | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.data.ItemPointer'
     */
    itemPointer(var0: java_lang_Integer | number): Promise<org_dcm4che3_data_ItemPointer | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.data.ItemPointer'
     */
    itemPointerSync(var0: java_lang_Integer | number): org_dcm4che3_data_ItemPointer | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    selectStringValue(var0: org_dcm4che3_data_Attributes | null, var1: java_lang_Integer | number, var2: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    selectStringValueSync(var0: org_dcm4che3_data_Attributes | null, var1: java_lang_Integer | number, var2: string | null): string | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.List'
     * @return original return type: 'org.dcm4che3.data.AttributeSelector'
     */
    static newInstanceAsync(var0: java_lang_Integer | number, var1: string | null, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<AttributeSelector>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'org.dcm4che3.data.ItemPointer[]'
     * @return original return type: 'org.dcm4che3.data.AttributeSelector'
     */
    static newInstanceAsync(var0: java_lang_Integer | number, var1: string | null, var2: (org_dcm4che3_data_ItemPointer | null)[] | null): Promise<AttributeSelector>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.data.AttributeSelector'
     */
    static newInstanceAsync(var0: java_lang_Integer | number, var1: string | null): Promise<AttributeSelector>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.data.AttributeSelector'
     */
    static newInstanceAsync(var0: java_lang_Integer | number): Promise<AttributeSelector>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.List'
     */
    constructor(var0: java_lang_Integer | number, var1: string | null, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null);
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'org.dcm4che3.data.ItemPointer[]'
     */
    constructor(var0: java_lang_Integer | number, var1: string | null, var2: (org_dcm4che3_data_ItemPointer | null)[] | null);
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     */
    constructor(var0: java_lang_Integer | number, var1: string | null);
    /**
     * @param var0 original type: 'int'
     */
    constructor(var0: java_lang_Integer | number);
}
declare const AttributeSelector_base: typeof AttributeSelectorClass;
/**
 * Class org.dcm4che3.data.AttributeSelector.
 *
 * This actually imports the java class for further use.
 * The class {@link AttributeSelectorClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AttributeSelector extends AttributeSelector_base {
}
export default AttributeSelector;
//# sourceMappingURL=AttributeSelector.d.ts.map