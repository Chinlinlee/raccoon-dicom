import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Date as java_util_Date } from "./../../../java/util/Date";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link DateRange} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DateRangeClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.util.Date'
     * @return original return type: 'boolean'
     */
    contains(var0: java_util_Date | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.util.Date'
     * @return original return type: 'boolean'
     */
    containsSync(var0: java_util_Date | null): boolean;
    /**
     * @return original return type: 'java.util.Date'
     */
    getEndDate(): Promise<java_util_Date | null>;
    /**
     * @return original return type: 'java.util.Date'
     */
    getEndDateSync(): java_util_Date | null;
    /**
     * @return original return type: 'java.util.Date'
     */
    getStartDate(): Promise<java_util_Date | null>;
    /**
     * @return original return type: 'java.util.Date'
     */
    getStartDateSync(): java_util_Date | null;
    /**
     * @return original return type: 'boolean'
     */
    isStartDateExeedsEndDate(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isStartDateExeedsEndDateSync(): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.util.Date'
     * @param var1 original type: 'java.util.Date'
     * @return original return type: 'org.dcm4che3.data.DateRange'
     */
    static newInstance(var0: java_util_Date | null, var1: java_util_Date | null): Promise<DateRange>;
    /**
     * @param var0 original type: 'java.util.Date'
     * @param var1 original type: 'java.util.Date'
     */
    constructor(var0: java_util_Date | null, var1: java_util_Date | null);
}
declare const DateRange_base: typeof DateRangeClass;
/**
 * Class org.dcm4che3.data.DateRange.
 *
 * This actually imports the java class for further use.
 * The class {@link DateRangeClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DateRange extends DateRange_base {
}
export default DateRange;
//# sourceMappingURL=DateRange.d.ts.map