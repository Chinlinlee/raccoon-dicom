import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Iterator as java_util_Iterator } from "./../../../../java/util/Iterator";
import { Properties as java_util_Properties } from "./../../../../java/util/Properties";
import { Option as org_apache_commons_cli_Option } from "./Option";
import { List as java_util_List } from "./../../../../java/util/List";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link CommandLine} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CommandLineClass extends JavaClass {
    /**
     * @return original return type: 'java.util.Iterator'
     */
    iterator(): Promise<java_util_Iterator | null>;
    /**
     * @return original return type: 'java.util.Iterator'
     */
    iteratorSync(): java_util_Iterator | null;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'boolean'
     */
    hasOption(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'boolean'
     */
    hasOptionSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasOption(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasOptionSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getParsedOptionValue(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getParsedOptionValueSync(var0: string | null): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Properties'
     */
    getOptionProperties(var0: string | null): Promise<java_util_Properties | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Properties'
     */
    getOptionPropertiesSync(var0: string | null): java_util_Properties | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getOptionValue(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getOptionValueSync(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'char'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getOptionValue(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'char'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getOptionValueSync(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getOptionValue(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getOptionValueSync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.String'
     */
    getOptionValue(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.String'
     */
    getOptionValueSync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.String[]'
     */
    getOptionValues(var0: string | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.String[]'
     */
    getOptionValuesSync(var0: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getOptionValues(var0: string | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getOptionValuesSync(var0: string | null): (string | null)[] | null;
    /**
     * @return original return type: 'org.apache.commons.cli.Option[]'
     */
    getOptions(): Promise<(org_apache_commons_cli_Option | null)[] | null>;
    /**
     * @return original return type: 'org.apache.commons.cli.Option[]'
     */
    getOptionsSync(): (org_apache_commons_cli_Option | null)[] | null;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.Object'
     */
    getOptionObject(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.Object'
     */
    getOptionObjectSync(var0: string | null): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getOptionObject(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getOptionObjectSync(var0: string | null): BasicOrJavaType | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getArgList(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getArgListSync(): java_util_List | null;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getArgs(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getArgsSync(): (string | null)[] | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const CommandLine_base: typeof CommandLineClass;
/**
 * Class org.apache.commons.cli.CommandLine.
 *
 * This actually imports the java class for further use.
 * The class {@link CommandLineClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CommandLine extends CommandLine_base {
}
export default CommandLine;
//# sourceMappingURL=CommandLine.d.ts.map