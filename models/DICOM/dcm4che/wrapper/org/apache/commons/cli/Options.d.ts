import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Option as org_apache_commons_cli_Option } from "./Option";
import { Boolean as java_lang_Boolean } from "./../../../../java/lang/Boolean";
import { OptionGroup as org_apache_commons_cli_OptionGroup } from "./OptionGroup";
import { List as java_util_List } from "./../../../../java/util/List";
import { Collection as java_util_Collection } from "./../../../../java/util/Collection";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link Options} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class OptionsClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasOption(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasOptionSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'org.apache.commons.cli.Option'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOption(var0: org_apache_commons_cli_Option | null): Promise<Options | null>;
    /**
     * @param var0 original type: 'org.apache.commons.cli.Option'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOptionSync(var0: org_apache_commons_cli_Option | null): Options | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOption(var0: string | null, var1: string | null, var2: java_lang_Boolean | boolean, var3: string | null): Promise<Options | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOptionSync(var0: string | null, var1: string | null, var2: java_lang_Boolean | boolean, var3: string | null): Options | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOption(var0: string | null, var1: java_lang_Boolean | boolean, var2: string | null): Promise<Options | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOptionSync(var0: string | null, var1: java_lang_Boolean | boolean, var2: string | null): Options | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOption(var0: string | null, var1: string | null): Promise<Options | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOptionSync(var0: string | null, var1: string | null): Options | null;
    /**
     * @param var0 original type: 'org.apache.commons.cli.OptionGroup'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOptionGroup(var0: org_apache_commons_cli_OptionGroup | null): Promise<Options | null>;
    /**
     * @param var0 original type: 'org.apache.commons.cli.OptionGroup'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addOptionGroupSync(var0: org_apache_commons_cli_OptionGroup | null): Options | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getRequiredOptions(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getRequiredOptionsSync(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasShortOption(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasShortOptionSync(var0: string | null): boolean;
    /**
     * @return original return type: 'java.util.Collection'
     */
    getOptions(): Promise<java_util_Collection | null>;
    /**
     * @return original return type: 'java.util.Collection'
     */
    getOptionsSync(): java_util_Collection | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    getMatchingOptions(var0: string | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    getMatchingOptionsSync(var0: string | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addRequiredOption(var0: string | null, var1: string | null, var2: java_lang_Boolean | boolean, var3: string | null): Promise<Options | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    addRequiredOptionSync(var0: string | null, var1: string | null, var2: java_lang_Boolean | boolean, var3: string | null): Options | null;
    /**
     * @param var0 original type: 'org.apache.commons.cli.Option'
     * @return original return type: 'org.apache.commons.cli.OptionGroup'
     */
    getOptionGroup(var0: org_apache_commons_cli_Option | null): Promise<org_apache_commons_cli_OptionGroup | null>;
    /**
     * @param var0 original type: 'org.apache.commons.cli.Option'
     * @return original return type: 'org.apache.commons.cli.OptionGroup'
     */
    getOptionGroupSync(var0: org_apache_commons_cli_Option | null): org_apache_commons_cli_OptionGroup | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Option'
     */
    getOption(var0: string | null): Promise<org_apache_commons_cli_Option | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.cli.Option'
     */
    getOptionSync(var0: string | null): org_apache_commons_cli_Option | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasLongOption(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasLongOptionSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.apache.commons.cli.Options'
     */
    static newInstanceAsync(): Promise<Options>;
    constructor();
}
declare const Options_base: typeof OptionsClass;
/**
 * Class org.apache.commons.cli.Options.
 *
 * This actually imports the java class for further use.
 * The class {@link OptionsClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Options extends Options_base {
}
export default Options;
//# sourceMappingURL=Options.d.ts.map